var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AlertTable1719546873577.html",[0,0.048,1,2.312]],["body/classes/AlertTable1719546873577.html",[0,0.034,1,3.273,2,1.075,3,0.216,4,0.216,5,0.159,6,3.763,7,3.273,8,1.627,9,1.358,10,3.383,11,0.466,12,0.574,13,0.992,14,1.059,15,4.24,16,2.434,17,2.815,18,2.815,19,0.391,20,0.03,21,0.596,22,1.178,23,1.3,24,0.69,25,1.871,26,2.815,27,4.63,28,1.871,29,1.15,30,1.15,31,1.059,32,2.37,33,2.815,34,1.871,35,0.216,36,0.831,37,0.216,38,2.959,39,5.036,40,3.889,41,1.358,42,3.936,43,1.633,44,2.815,45,2.942,46,4.63,47,4.791,48,1.178,49,4.435,50,4.526,51,3.763,52,2.815,53,3.763,54,1.943,55,2.659,56,2.815,57,1.871,58,2.815,59,2.815,60,1.871,61,1.871,62,1.627,63,2.815,64,1.871,65,1.871,66,0.017,67,0.017]],["title/classes/AlertTable1719546931988.html",[0,0.048,68,2.312]],["body/classes/AlertTable1719546931988.html",[0,0.034,2,1.072,3,0.216,4,0.216,5,0.159,7,3.269,8,1.624,9,1.356,10,3.379,11,0.465,12,0.573,13,0.991,14,1.057,15,4.236,16,2.433,17,2.81,18,2.81,19,0.39,20,0.03,21,0.595,22,1.176,23,1.297,24,0.689,25,1.867,26,2.81,27,4.628,28,1.867,29,1.148,30,1.148,31,1.057,32,2.367,33,2.81,34,1.867,35,0.216,36,0.829,37,0.216,38,2.958,39,5.035,40,3.888,41,1.356,42,3.933,43,1.631,44,2.81,45,2.938,46,4.628,47,4.788,48,1.176,49,4.434,50,4.523,51,3.759,52,2.81,53,3.759,54,1.94,55,2.657,56,2.81,57,1.867,58,2.81,59,2.81,60,1.867,61,1.867,62,1.624,63,2.81,64,1.867,65,1.867,66,0.017,67,0.017,68,3.269,69,3.759,70,2.237]],["title/controllers/AppController.html",[71,1.527,72,2.053]],["body/controllers/AppController.html",[0,0.06,3,0.387,4,0.387,5,0.285,11,0.387,14,1.586,16,2.648,20,0.032,24,0.684,31,1.262,32,2.655,35,0.487,37,0.387,38,1.926,66,0.025,67,0.025,71,2.421,72,3.256,73,2.329,74,3.354,75,4.839,76,1.37,77,4.018,78,0.901,79,2.904,80,3.354,81,4.018,82,1.926,83,1.37,84,3.667,85,4.018,86,1.262]],["title/modules/AppModule.html",[87,1.18,88,2.053]],["body/modules/AppModule.html",[0,0.045,3,0.286,4,0.286,5,0.21,20,0.033,35,0.591,37,0.286,66,0.02,67,0.02,72,3.062,73,2.393,78,0.665,79,2.94,80,2.474,87,1.76,88,3.881,89,1.558,90,1.718,91,2.152,92,2.152,93,1.718,94,2.754,95,1.718,96,2.474,97,2.474,98,2.474,99,2.839,100,3.242,101,2.997,102,2.152,103,2.152,104,2.964,105,3.446,106,2.964,107,2.474,108,1.718,109,2.152,110,2.964,111,2.964,112,2.964,113,1.718,114,2.964,115,2.393,116,2.964,117,2.393,118,2.964,119,2.661,120,2.964,121,2.964,122,2.964,123,2.997,124,1.979,125,2.964,126,2.964,127,1.911,128,2.997,129,4.129,130,4.129]],["title/injectables/AppService.html",[79,1.674,131,1.086]],["body/injectables/AppService.html",[0,0.057,3,0.367,4,0.367,5,0.271,11,0.367,12,0.831,14,1.534,16,2.584,19,0.367,20,0.032,24,0.831,31,1.197,35,0.471,37,0.367,38,1.827,66,0.024,67,0.024,75,4.746,76,1.3,78,0.855,79,2.568,82,2.584,83,1.3,84,2.767,86,1.197,131,1.666,132,2.457,133,3.182,134,2.584,135,4.366,136,3.812,137,2.767,138,4.885,139,3.812,140,2.21,141,2.457,142,3.812,143,3.812,144,3.812,145,3.812]],["title/entities/City.html",[146,1.086,147,2.312]],["body/entities/City.html",[0,0.048,3,0.306,4,0.306,5,0.225,11,0.306,12,0.736,13,0.651,19,0.533,20,0.032,21,1.407,24,0.942,35,0.306,36,1.175,37,0.306,40,2.045,43,1.983,48,3.002,54,2.36,66,0.021,67,0.021,76,1.887,146,1.475,147,3.574,148,1.52,149,2.648,150,3.173,151,2.854,152,3.173,153,2.36,154,3.065,155,2.045,156,3.172,157,1.743,158,2.854,159,3.172,160,3.14,161,3.839,162,3.172,163,2.045,164,3.172,165,3.172,166,2.508,167,3.172,168,3.172,169,3.172,170,2.508,171,3.172,172,2.789]],["title/interfaces/Data.html",[173,1.18,174,1.674]],["body/interfaces/Data.html",[0,0.059,3,0.378,4,0.378,5,0.279,9,1.582,11,0.378,12,0.847,19,0.378,20,0.032,35,0.48,37,0.378,66,0.025,67,0.025,78,0.881,86,1.564,131,1.698,173,1.455,174,3.236,175,2.531,176,2.851,177,4.563,178,4.156,179,2.886,180,4.156,181,3.278,182,3.209,183,2.276,184,2.531,185,3.278,186,3.278,187,3.278,188,3.278]],["title/classes/Filter.html",[0,0.048,189,2.312]],["body/classes/Filter.html",[0,0.044,2,1.413,3,0.284,4,0.284,5,0.209,9,1.657,11,0.284,13,0.605,14,1.292,19,0.284,20,0.033,21,1.364,24,0.502,29,1.005,30,1.005,31,0.926,35,0.396,37,0.284,45,2.139,66,0.02,67,0.02,78,0.661,83,1.748,174,1.549,189,2.985,190,2.46,191,4.736,192,3.304,193,4.112,194,3.438,195,2.745,196,5.125,197,2.947,198,4.736,199,2.947,200,3.954,201,2.139,202,3.433,203,1.549,204,2.947,205,2.947,206,2.161,207,2.947,208,2.947,209,2.947,210,3.433,211,2.947,212,4.5,213,2.947,214,2.947,215,2.947,216,4.736,217,2.947,218,1.9,219,4.112,220,2.947,221,4.112,222,2.947,223,2.947,224,2.46,225,2.947,226,2.947,227,2.947,228,2.947,229,2.947,230,2.46,231,2.46]],["title/guards/LoginGuard.html",[117,1.846,232,2.312]],["body/guards/LoginGuard.html",[0,0.068,3,0.26,4,0.26,5,0.191,9,1.086,11,0.26,12,0.459,13,0.553,14,1.212,19,0.26,20,0.033,24,0.459,29,0.919,30,0.919,31,0.846,32,2.029,35,0.523,37,0.26,55,1.292,66,0.019,67,0.019,71,1.292,78,0.604,82,1.85,83,1.778,86,1.212,87,0.998,113,1.562,117,2.238,124,1.85,131,1.317,134,1.85,140,1.562,157,1.086,173,0.998,179,2.855,182,2.907,183,1.562,192,1.737,195,1.562,203,2.029,206,2.589,233,1.956,234,1.956,235,3.575,236,3.575,237,3.784,238,2.25,239,2.695,240,2.238,241,2.907,242,2.802,243,1.956,244,1.562,245,1.737,246,2.25,247,1.956,248,1.956,249,1.956,250,1.956,251,2.25,252,2.614,253,2.25,254,1.562,255,1.956,256,1.956,257,2.25,258,1.737,259,2.25,260,2.25,261,2.25,262,2.25,263,2.25,264,2.488,265,1.555,266,1.956,267,2.25,268,2.25,269,2.25,270,2.25,271,1.956,272,2.25,273,1.737,274,2.25]],["title/classes/LoginUserDto.html",[0,0.048,275,1.846]],["body/classes/LoginUserDto.html",[0,0.071,2,1.732,3,0.348,4,0.348,5,0.256,11,0.348,12,0.803,13,0.968,19,0.455,20,0.032,21,1.482,24,0.803,35,0.455,37,0.348,66,0.023,67,0.023,76,1.609,151,3.501,153,2.895,218,3.591,244,2.094,275,2.735,276,4.387,277,2.623,278,4.719,279,3.613,280,3.613,281,3.613,282,3.613,283,3.613,284,3.613,285,4.387,286,4.387,287,5.255,288,2.623]],["title/classes/MyLogger.html",[0,0.048,289,2.312]],["body/classes/MyLogger.html",[0,0.036,2,1.152,3,0.342,4,0.231,5,0.252,9,1.43,11,0.231,12,0.604,13,0.867,14,1.115,19,0.45,20,0.032,24,0.847,29,1.44,30,1.44,31,1.326,35,0.48,37,0.231,66,0.018,67,0.018,78,0.539,83,1.777,86,0.755,134,2.024,194,2.577,218,3.567,240,2.704,265,1.43,289,2.577,290,2.005,291,4.223,292,4.349,293,4.223,294,3.551,295,4.223,296,3.551,297,3.551,298,5.651,299,2.402,300,3.551,301,2.402,302,3.551,303,2.402,304,3.551,305,4.223,306,3.551,307,2.577,308,2.964,309,2.964,310,2.005,311,2.005,312,2.402,313,4.665,314,2.402,315,2.402,316,2.402,317,2.402,318,2.402,319,5.534,320,2.402,321,2.402,322,3.551,323,2.402,324,3.551,325,2.402,326,2.402,327,2.402,328,2.402,329,2.402,330,2.402,331,2.402,332,2.402,333,2.402,334,4.665,335,4.665,336,2.402,337,2.402,338,2.402,339,4.223,340,4.223,341,2.402,342,4.223,343,2.402,344,2.402]],["title/entities/Permission.html",[146,1.086,345,1.527]],["body/entities/Permission.html",[0,0.049,3,0.315,4,0.315,5,0.232,11,0.315,12,0.752,13,1.026,19,0.539,20,0.032,21,1.425,22,2.322,24,0.952,35,0.315,36,1.212,37,0.315,43,2.253,48,2.94,54,2.398,66,0.022,67,0.022,76,1.908,146,1.507,148,1.568,150,3.224,152,3.224,154,3.105,155,2.109,157,1.78,158,2.561,163,2.109,166,2.561,170,2.561,345,2.118,346,2.731,347,5.002,348,3.272,349,3.688,350,3.272,351,2.375,352,3.272,353,3.272,354,3.272]],["title/guards/PermissionGuard.html",[119,2.053,232,2.312]],["body/guards/PermissionGuard.html",[0,0.058,3,0.261,4,0.261,5,0.192,9,1.091,11,0.261,12,0.461,13,0.556,14,1.217,16,2.168,19,0.261,20,0.033,21,0.721,24,0.461,29,0.924,30,0.924,31,0.851,32,2.037,35,0.503,37,0.261,38,1.857,55,1.299,66,0.019,67,0.019,78,0.608,82,2.366,83,1.908,86,1.421,119,2.498,124,1.299,131,1.321,134,2.366,140,1.57,179,2.862,195,1.57,203,1.424,206,2.378,233,1.967,236,3.583,237,3.583,238,3.234,240,1.57,242,3.283,243,1.967,244,1.57,245,1.746,248,1.967,249,1.967,250,1.967,255,1.967,256,1.967,258,1.746,264,2.498,265,1.822,271,1.967,345,1.299,355,2.261,356,2.366,357,2.709,358,1.967,359,2.709,360,2.916,361,2.709,362,2.709,363,2.709,364,2.709,365,2.709,366,1.967,367,2.709,368,2.709,369,2.261,370,2.709,371,2.709,372,2.709,373,2.709,374,2.709,375,2.709,376,2.709,377,2.709,378,2.709,379,2.709,380,2.709]],["title/entities/Person.html",[146,1.086,381,2.312]],["body/entities/Person.html",[0,0.052,3,0.331,4,0.331,5,0.244,11,0.331,12,0.777,13,1.121,19,0.548,20,0.032,21,1.214,24,0.968,35,0.331,36,1.272,37,0.331,43,2.065,54,2.618,66,0.023,67,0.023,76,1.939,146,1.556,148,1.646,154,3.166,157,2.2,158,2.971,160,2.493,161,3.313,166,2.971,170,2.971,172,2.214,381,3.721,382,2.867,383,5.126,384,5.126,385,5.126,386,3.434,387,3.434,388,3.434,389,3.434,390,3.434]],["title/modules/RedisModule.html",[87,1.18,99,1.674]],["body/modules/RedisModule.html",[0,0.054,3,0.343,4,0.343,5,0.253,13,0.731,14,1.119,19,0.343,20,0.032,24,0.607,29,1.215,30,1.215,31,1.119,35,0.503,37,0.343,66,0.023,67,0.023,78,0.799,83,1.595,86,1.469,87,1.934,89,1.873,94,2.066,95,2.066,99,2.744,115,2.066,123,3.395,128,2.587,135,4.023,141,2.297,173,1.32,241,2.297,265,1.436,391,2.587,392,3.904,393,3.564,394,3.904,395,3.572,396,3.564,397,3.564,398,4.357,399,3.904,400,3.395,401,2.975,402,2.975,403,4.357,404,2.975,405,2.975]],["title/interfaces/RedisModuleOption.html",[173,1.18,395,2.053]],["body/interfaces/RedisModuleOption.html",[0,0.054,3,0.343,4,0.343,5,0.253,11,0.343,12,0.796,19,0.451,20,0.032,35,0.503,37,0.343,66,0.023,67,0.023,78,0.799,83,1.595,86,1.469,87,1.934,94,2.066,95,2.066,99,2.458,115,3.212,123,4.177,128,2.587,135,4.023,141,2.297,173,1.32,175,2.297,241,3.365,265,1.436,391,2.587,392,2.975,394,2.975,395,3.365,398,3.904,399,3.904,400,4.023,401,2.975,402,2.975,403,4.357,404,2.975,405,2.975]],["title/classes/RegisterUserDto.html",[0,0.048,406,1.846]],["body/classes/RegisterUserDto.html",[0,0.067,2,1.578,3,0.317,4,0.317,5,0.234,11,0.317,12,0.755,19,0.428,20,0.032,21,1.429,24,0.755,35,0.317,37,0.317,66,0.022,67,0.022,76,1.513,151,3.348,153,2.768,172,2.122,218,3.961,244,1.909,277,2.39,285,4.189,286,4.189,406,2.572,407,4.189,408,4.437,409,3.293,410,5.775,411,4.437,412,3.293,413,3.293,414,3.293,415,4.437,416,3.293,417,4.437,418,4.437,419,4.437,420,4.437,421,3.293,422,3.293,423,3.293,424,4.437,425,3.293]],["title/interfaces/Request.html",[173,1.18,206,1.674]],["body/interfaces/Request.html",[0,0.07,3,0.272,4,0.272,5,0.201,9,1.139,11,0.272,12,0.68,19,0.272,20,0.033,32,1.486,35,0.531,37,0.272,55,2.412,66,0.02,67,0.02,71,1.355,78,0.634,82,1.355,83,1.81,86,1.254,87,1.047,113,1.639,117,1.639,124,1.914,131,1.362,134,1.355,140,1.639,157,1.866,173,1.047,175,1.822,179,2.315,182,2.574,183,1.639,192,1.822,195,1.639,203,2.099,206,2.79,234,2.052,235,3.361,236,3.361,237,3.361,240,1.639,241,2.574,242,2.899,243,2.052,244,1.639,245,1.822,246,2.36,247,2.052,248,2.052,249,2.052,250,2.052,251,2.36,252,2.684,253,2.36,254,1.639,255,2.052,256,2.052,257,2.36,258,1.822,259,2.36,260,2.36,261,2.36,262,2.36,263,2.36,264,2.574,265,1.609,266,2.052,267,2.36,268,2.36,269,2.36,270,2.36,271,2.052,272,2.36,273,1.822,274,2.36]],["title/injectables/ResponseInterceptor.html",[131,1.086,184,2.053]],["body/injectables/ResponseInterceptor.html",[0,0.056,3,0.361,4,0.361,5,0.266,9,1.508,11,0.361,13,0.768,14,1.516,19,0.361,20,0.032,24,0.637,29,1.277,30,1.277,31,1.176,35,0.465,37,0.361,66,0.024,67,0.024,78,0.839,86,1.516,131,1.647,132,2.413,173,1.387,174,2.809,176,2.717,177,3.125,178,4.714,179,3.273,180,4.031,181,3.125,182,3.445,183,2.17,184,3.112,185,4.031,186,4.462,187,3.125,188,3.125,240,2.17,426,4.828,427,3.743]],["title/entities/Role.html",[146,1.086,428,1.674]],["body/entities/Role.html",[0,0.048,3,0.309,4,0.309,5,0.228,11,0.309,12,0.742,13,1.091,19,0.536,20,0.032,21,1.161,24,0.946,35,0.42,36,1.19,37,0.309,43,2.239,48,2.794,54,2.091,66,0.022,67,0.022,76,1.895,146,1.488,148,1.539,150,3.194,152,3.194,154,3.081,155,2.07,157,1.757,158,2.529,163,2.07,166,2.529,170,2.529,345,2.548,349,2.681,351,2.331,428,2.293,429,2.681,430,3.596,431,3.211,432,3.211,433,3.211,434,2.681,435,4.362,436,3.211,437,3.211,438,3.642,439,3.642,440,3.211]],["title/entities/User.html",[41,1.283,146,1.086]],["body/entities/User.html",[0,0.044,3,0.285,4,0.285,5,0.21,11,0.285,12,0.701,13,0.607,19,0.538,20,0.032,21,1.365,24,0.951,35,0.397,36,1.095,37,0.285,41,1.66,43,2.174,48,3.014,49,2.991,54,2.274,66,0.02,67,0.02,76,1.906,146,1.405,148,1.417,150,3.058,151,2.75,152,3.058,153,2.274,154,2.975,155,1.905,157,1.66,158,2.388,160,2.991,161,3.725,163,1.905,166,2.388,170,2.388,172,2.656,351,2.145,366,3.443,428,2.697,434,2.467,438,3.439,439,3.439,441,2.467,442,2.956,443,2.956,444,2.956,445,2.956,446,2.956,447,2.956,448,2.956,449,2.956,450,2.956]],["title/controllers/UserController.html",[71,1.527,451,2.053]],["body/controllers/UserController.html",[0,0.03,3,0.191,4,0.191,5,0.14,11,0.191,13,0.77,14,0.962,16,2.417,19,0.466,20,0.033,21,0.815,24,0.638,29,1.045,30,1.045,31,1.178,35,0.545,36,0.733,37,0.191,38,2.191,41,0.797,43,1.234,55,1.469,66,0.015,67,0.015,71,0.948,73,1.146,76,1.279,78,0.443,82,1.798,83,1.279,84,3.318,86,1.327,108,1.146,113,1.146,124,1.469,127,1.275,134,1.469,137,2.224,140,1.146,153,1.798,201,1.435,202,3.526,203,1.039,210,2.558,224,1.651,235,2.723,247,1.435,252,1.776,254,2.174,258,1.975,275,2.923,288,1.435,356,1.798,358,1.435,360,1.275,406,2.803,451,1.975,452,1.651,453,1.977,454,4.225,455,2.558,456,1.977,457,1.977,458,1.651,459,1.977,460,5.043,461,1.977,462,1.977,463,1.977,464,3.064,465,1.977,466,1.651,467,3.064,468,1.977,469,1.977,470,1.977,471,1.651,472,2.558,473,1.435,474,1.977,475,1.651,476,2.558,477,3.131,478,3.064,479,1.977,480,1.977,481,3.064,482,3.064,483,3.751,484,1.977,485,1.977,486,1.977,487,1.977,488,1.977,489,1.977,490,1.977,491,4.225,492,1.977,493,1.977,494,1.977,495,1.977,496,1.977,497,1.977,498,1.651,499,1.977,500,1.977,501,1.977,502,1.977,503,1.977,504,1.977,505,1.977,506,3.064,507,3.064,508,3.064,509,3.064,510,3.064,511,1.977,512,3.064,513,1.977,514,1.977,515,1.977,516,1.977,517,1.977]],["title/modules/UserModule.html",[87,1.18,100,1.846]],["body/modules/UserModule.html",[0,0.055,3,0.353,4,0.353,5,0.26,20,0.032,35,0.559,37,0.353,41,1.476,66,0.024,67,0.024,73,2.76,78,0.822,87,1.96,89,1.926,90,2.124,91,2.66,92,2.66,93,2.124,94,3.067,95,3.067,100,3.512,101,3.457,102,2.66,103,2.66,105,3.058,107,3.058,108,2.124,356,3.043,358,2.66,451,3.41,518,3.058,519,3.058,520,3.058,521,3.664,522,3.664,523,3.058,524,3.664]],["title/injectables/UserService.html",[131,1.086,356,1.527]],["body/injectables/UserService.html",[0,0.025,3,0.162,4,0.162,5,0.12,11,0.162,12,0.46,13,0.794,14,0.848,16,2.711,19,0.435,20,0.033,22,0.886,23,0.977,24,0.839,29,1.319,30,1.319,31,1.329,35,0.503,36,0.624,37,0.162,38,2.165,41,1.911,42,1.224,43,1.362,55,0.808,62,1.224,66,0.013,67,0.013,76,0.921,78,0.378,82,1.621,83,1.734,86,1.214,108,0.977,124,1.621,131,0.921,132,1.087,134,2.165,137,2.807,153,1.295,157,1.819,192,1.087,200,3.228,201,1.224,254,1.566,264,2.179,265,2.221,266,1.224,273,1.087,275,2.453,292,3.77,307,1.224,345,1.621,356,1.295,366,1.961,406,2.453,428,1.777,430,1.224,455,2.255,458,2.255,466,2.255,471,1.407,472,2.255,475,1.407,476,2.822,477,3.77,523,1.407,525,1.407,526,3.381,527,2.702,528,2.702,529,3.867,530,2.702,531,1.686,532,1.686,533,2.702,534,1.686,535,1.686,536,1.686,537,1.686,538,1.686,539,1.686,540,3.381,541,2.702,542,1.686,543,1.686,544,2.255,545,1.686,546,1.686,547,1.686,548,1.686,549,3.381,550,1.686,551,2.702,552,1.686,553,1.686,554,2.702,555,1.686,556,2.702,557,1.686,558,1.686,559,1.686,560,1.686,561,1.686,562,1.686,563,1.686,564,1.686,565,1.686,566,1.686,567,2.702,568,1.686,569,2.702,570,1.686,571,2.702,572,1.686,573,2.702,574,1.686,575,3.381,576,1.686,577,3.381,578,1.686,579,3.381,580,1.686,581,1.686,582,3.381,583,1.686,584,1.686,585,1.686,586,1.686,587,1.686,588,1.686,589,1.686,590,1.686,591,1.686,592,1.686]],["title/coverage.html",[593,3.622]],["body/coverage.html",[0,0.083,1,1.851,5,0.181,6,2.128,7,2.692,8,2.692,19,0.246,20,0.032,40,1.644,41,1.027,66,0.018,67,0.018,68,1.851,69,2.128,71,1.778,72,1.644,74,2.128,79,1.34,93,1.478,109,1.851,115,1.478,117,1.478,119,1.644,131,1.491,133,2.128,146,1.739,147,2.692,149,3.096,173,1.619,174,1.34,176,2.692,184,1.644,189,1.851,190,2.128,206,1.34,232,2.692,234,2.692,252,1.478,265,1.027,275,1.478,276,2.128,277,2.692,289,1.851,290,2.128,345,1.222,346,2.128,355,2.128,356,1.222,360,1.644,369,5.387,381,1.851,382,2.128,391,1.851,395,1.644,406,1.478,407,2.128,428,1.34,429,2.128,441,2.128,451,1.644,452,2.128,473,1.851,525,2.128,593,2.128,594,2.55,595,2.55,596,2.55,597,5.1,598,5.1,599,4.8,600,3.649,601,5.322,602,2.128,603,6.077,604,2.128,605,2.128,606,3.096,607,2.128,608,2.128,609,3.709,610,2.128,611,4.371,612,2.55,613,3.096,614,2.128,615,2.55]],["title/dependencies.html",[90,2.219,616,2.224]],["body/dependencies.html",[5,0.247,20,0.033,36,1.289,66,0.023,67,0.023,78,0.78,90,2.017,108,2.017,113,2.017,141,2.243,183,2.017,203,1.829,245,2.243,288,2.526,307,3.342,308,2.905,309,2.905,310,2.905,311,2.905,544,2.905,617,5.159,618,3.48,619,3.48,620,3.48,621,3.48,622,3.48,623,3.48,624,3.48,625,3.48,626,3.48,627,5.159,628,3.48,629,3.48,630,3.48,631,3.48,632,3.48,633,3.48,634,3.48,635,3.48,636,3.48,637,3.48,638,3.48,639,4.604,640,3.48,641,3.48,642,3.48,643,3.48,644,3.48,645,3.48,646,2.905,647,3.48,648,2.905,649,3.48,650,3.48,651,3.48,652,3.48,653,3.48,654,3.48,655,3.48,656,3.48,657,3.48,658,3.48]],["title/miscellaneous/functions.html",[659,1.717,660,3.196]],["body/miscellaneous/functions.html",[11,0.401,13,1.06,19,0.498,20,0.029,21,1.374,22,2.714,23,2.994,29,1.761,30,1.761,66,0.026,67,0.026,93,3.255,157,2.08,174,2.188,194,3.749,212,4.311,230,4.311,231,3.475,273,2.683,473,3.749,610,3.475,613,3.475,614,4.311,659,2.683,660,3.475,661,4.163,662,5.164,663,4.163,664,4.163,665,4.163]],["title/index.html",[11,0.257,666,2.665,667,2.665]],["body/index.html",[20,0.033,66,0.025,67,0.025,498,4.98,668,6.183,669,4.003,670,4.003,671,4.003,672,4.003,673,4.003,674,4.003,675,4.003,676,5.515,677,4.003,678,4.003,679,4.003,680,4.003,681,4.003,682,4.003,683,4.003]],["title/modules.html",[89,2.28]],["body/modules.html",[20,0.028,66,0.028,67,0.028,88,3.05,89,2.487,99,2.487,100,2.742,684,5.58,685,5.58,686,5.58,687,5.935,688,4.731,689,4.731]],["title/overview.html",[690,3.622]],["body/overview.html",[2,1.854,20,0.03,66,0.024,67,0.024,73,2.242,79,2.853,87,1.433,88,4.004,89,2.033,90,2.242,91,2.808,92,2.808,93,2.242,94,2.242,95,2.242,96,3.229,97,3.229,98,3.229,99,2.853,100,3.5,101,3.58,102,2.808,103,2.808,132,2.494,148,1.854,175,2.494,233,2.808,356,2.941,518,3.229,519,3.229,520,3.229,690,3.229,691,5.429,692,4.932,693,3.868,694,3.868]],["title/properties.html",[12,0.652,616,2.224]],["body/properties.html",[12,0.836,20,0.031,66,0.028,67,0.028,127,3.165,695,4.91,696,4.91,697,4.91]],["title/miscellaneous/variables.html",[659,1.717,698,3.196]],["body/miscellaneous/variables.html",[11,0.3,19,0.47,20,0.032,21,0.829,22,2.986,23,3.293,41,1.255,66,0.021,67,0.021,109,3.102,115,2.477,124,2.338,127,2.008,148,2.048,151,1.806,153,1.493,195,2.477,252,2.477,254,1.806,265,1.255,345,2.048,360,2.754,400,2.261,428,1.637,430,3.102,600,2.6,602,4.381,604,3.567,605,2.6,606,3.567,607,3.567,608,3.567,646,4.071,648,2.6,659,2.008,698,2.6,699,4.877,700,3.115,701,4.273,702,3.115,703,3.115,704,3.115,705,3.115,706,3.115,707,4.273,708,3.115,709,3.115,710,3.115,711,3.115,712,3.115,713,3.115,714,3.115,715,3.115,716,3.115,717,3.115,718,3.115,719,3.115,720,3.115,721,3.115,722,3.115,723,3.115,724,3.115,725,3.115,726,3.115,727,3.115,728,3.115,729,3.115,730,3.115,731,4.273]]],"invertedIndex":[["",{"_index":20,"title":{},"body":{"classes/AlertTable1719546873577.html":{},"classes/AlertTable1719546931988.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/City.html":{},"interfaces/Data.html":{},"classes/Filter.html":{},"guards/LoginGuard.html":{},"classes/LoginUserDto.html":{},"classes/MyLogger.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"entities/Person.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleOption.html":{},"classes/RegisterUserDto.html":{},"interfaces/Request.html":{},"injectables/ResponseInterceptor.html":{},"entities/Role.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":369,"title":{},"body":{"guards/PermissionGuard.html":{},"coverage.html":{}}}],["0.2.0",{"_index":652,"title":{},"body":{"dependencies.html":{}}}],["0.3.20",{"_index":654,"title":{},"body":{"dependencies.html":{}}}],["0.3.7",{"_index":643,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":603,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":598,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":599,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":597,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":609,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":612,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":231,"title":{},"body":{"classes/Filter.html":{},"miscellaneous/functions.html":{}}}],["1.0.0",{"_index":696,"title":{},"body":{"properties.html":{}}}],["1.10.1",{"_index":635,"title":{},"body":{"dependencies.html":{}}}],["1.11.11",{"_index":638,"title":{},"body":{"dependencies.html":{}}}],["1.17.14",{"_index":628,"title":{},"body":{"dependencies.html":{}}}],["1.18.1",{"_index":640,"title":{},"body":{"dependencies.html":{}}}],["1.4.11",{"_index":630,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10.0.0",{"_index":617,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":623,"title":{},"body":{"dependencies.html":{}}}],["10.2.0",{"_index":618,"title":{},"body":{"dependencies.html":{}}}],["10.8.1",{"_index":649,"title":{},"body":{"dependencies.html":{}}}],["10k",{"_index":338,"title":{},"body":{"classes/MyLogger.html":{}}}],["127.0.0.1",{"_index":729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":692,"title":{},"body":{"overview.html":{}}}],["2.3.0",{"_index":645,"title":{},"body":{"dependencies.html":{}}}],["2.8.17",{"_index":625,"title":{},"body":{"dependencies.html":{}}}],["2.8.5",{"_index":637,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":557,"title":{},"body":{"injectables/UserService.html":{}}}],["3",{"_index":691,"title":{},"body":{"overview.html":{}}}],["3.0.0",{"_index":642,"title":{},"body":{"dependencies.html":{}}}],["3.10.1",{"_index":647,"title":{},"body":{"dependencies.html":{}}}],["3.13.0",{"_index":657,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":410,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["30m",{"_index":511,"title":{},"body":{"controllers/UserController.html":{}}}],["30之间'})@isnotempty({message",{"_index":412,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["30之间'})@matches(/^[a",{"_index":416,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["3306",{"_index":708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":633,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":693,"title":{},"body":{"overview.html":{}}}],["5.0.0",{"_index":658,"title":{},"body":{"dependencies.html":{}}}],["5.4.1",{"_index":644,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":161,"title":{},"body":{"entities/City.html":{},"entities/Person.html":{},"entities/User.html":{}}}],["6379",{"_index":730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7",{"_index":694,"title":{},"body":{"overview.html":{}}}],["7.4.0",{"_index":622,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":653,"title":{},"body":{"dependencies.html":{}}}],["7d",{"_index":513,"title":{},"body":{"controllers/UserController.html":{}}}],["9#$%_",{"_index":419,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["9.0.1",{"_index":656,"title":{},"body":{"dependencies.html":{}}}],["9.0.8",{"_index":632,"title":{},"body":{"dependencies.html":{}}}],["_",{"_index":420,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["a_关联字段_表名b。name",{"_index":450,"title":{},"body":{"entities/User.html":{}}}],["accesstoken",{"_index":506,"title":{},"body":{"controllers/UserController.html":{}}}],["add",{"_index":42,"title":{},"body":{"classes/AlertTable1719546873577.html":{},"classes/AlertTable1719546931988.html":{},"injectables/UserService.html":{}}}],["age",{"_index":383,"title":{},"body":{"entities/Person.html":{}}}],["alert",{"_index":7,"title":{},"body":{"classes/AlertTable1719546873577.html":{},"classes/AlertTable1719546931988.html":{},"coverage.html":{}}}],["alerttable1719546873577",{"_index":1,"title":{"classes/AlertTable1719546873577.html":{}},"body":{"classes/AlertTable1719546873577.html":{},"coverage.html":{}}}],["alerttable1719546931988",{"_index":68,"title":{"classes/AlertTable1719546931988.html":{}},"body":{"classes/AlertTable1719546931988.html":{},"coverage.html":{}}}],["apibody",{"_index":481,"title":{},"body":{"controllers/UserController.html":{}}}],["apibody({type",{"_index":461,"title":{},"body":{"controllers/UserController.html":{}}}],["apioperation",{"_index":482,"title":{},"body":{"controllers/UserController.html":{}}}],["apioperation({summary",{"_index":459,"title":{},"body":{"controllers/UserController.html":{}}}],["apiparam",{"_index":499,"title":{},"body":{"controllers/UserController.html":{}}}],["apiproperty",{"_index":287,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["apiproperty({name",{"_index":278,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["apiquery",{"_index":496,"title":{},"body":{"controllers/UserController.html":{}}}],["apiresponse",{"_index":483,"title":{},"body":{"controllers/UserController.html":{}}}],["apitags",{"_index":484,"title":{},"body":{"controllers/UserController.html":{}}}],["apitags('user",{"_index":485,"title":{},"body":{"controllers/UserController.html":{}}}],["app.controller",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":80,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_guard",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":72,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["appmodule",{"_index":88,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":79,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["appstr",{"_index":322,"title":{},"body":{"classes/MyLogger.html":{}}}],["argumentshost",{"_index":196,"title":{},"body":{"classes/Filter.html":{}}}],["array.isarray(exceptionres.message",{"_index":223,"title":{},"body":{"classes/Filter.html":{}}}],["async",{"_index":16,"title":{},"body":{"classes/AlertTable1719546873577.html":{},"classes/AlertTable1719546931988.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/PermissionGuard.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["author",{"_index":697,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":260,"title":{},"body":{"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["auto_increment",{"_index":70,"title":{},"body":{"classes/AlertTable1719546931988.html":{}}}],["available",{"_index":689,"title":{},"body":{"modules.html":{}}}],["await",{"_index":38,"title":{},"body":{"classes/AlertTable1719546873577.html":{},"classes/AlertTable1719546931988.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/PermissionGuard.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["badrequestexception，exception.message是bad",{"_index":225,"title":{},"body":{"classes/Filter.html":{}}}],["baseconfig",{"_index":602,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["body",{"_index":469,"title":{},"body":{"controllers/UserController.html":{}}}],["body(validationpipe",{"_index":502,"title":{},"body":{"controllers/UserController.html":{}}}],["boolean",{"_index":241,"title":{},"body":{"guards/LoginGuard.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleOption.html":{},"interfaces/Request.html":{}}}],["bootstrap",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":687,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":684,"title":{},"body":{"modules.html":{}}}],["callhandler",{"_index":178,"title":{},"body":{"interfaces/Data.html":{},"injectables/ResponseInterceptor.html":{}}}],["canactivate",{"_index":237,"title":{},"body":{"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{}}}],["canactivate(context",{"_index":238,"title":{},"body":{"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{}}}],["cascade",{"_index":63,"title":{},"body":{"classes/AlertTable1719546873577.html":{},"classes/AlertTable1719546931988.html":{}}}],["catch",{"_index":192,"title":{},"body":{"classes/Filter.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{},"injectables/UserService.html":{}}}],["catch(exception",{"_index":193,"title":{},"body":{"classes/Filter.html":{}}}],["chalk",{"_index":308,"title":{},"body":{"classes/MyLogger.html":{},"dependencies.html":{}}}],["chalk.green('[nest",{"_index":323,"title":{},"body":{"classes/MyLogger.html":{}}}],["chalk.yellow(`[${context",{"_index":325,"title":{},"body":{"classes/MyLogger.html":{}}}],["city",{"_index":147,"title":{"entities/City.html":{}},"body":{"entities/City.html":{},"coverage.html":{}}}],["class",{"_index":0,"title":{"classes/AlertTable1719546873577.html":{},"classes/AlertTable1719546931988.html":{},"classes/Filter.html":{},"classes/LoginUserDto.html":{},"classes/MyLogger.html":{},"classes/RegisterUserDto.html":{}},"body":{"classes/AlertTable1719546873577.html":{},"classes/AlertTable1719546931988.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/City.html":{},"interfaces/Data.html":{},"classes/Filter.html":{},"guards/LoginGuard.html":{},"classes/LoginUserDto.html":{},"classes/MyLogger.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"entities/Person.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleOption.html":{},"classes/RegisterUserDto.html":{},"interfaces/Request.html":{},"injectables/ResponseInterceptor.html":{},"entities/Role.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AlertTable1719546873577.html":{},"classes/AlertTable1719546931988.html":{},"classes/Filter.html":{},"classes/LoginUserDto.html":{},"classes/MyLogger.html":{},"classes/RegisterUserDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":518,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":519,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":520,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["code",{"_index":230,"title":{},"body":{"classes/Filter.html":{},"miscellaneous/functions.html":{}}}],["column",{"_index":54,"title":{},"body":{"classes/AlertTable1719546873577.html":{},"classes/AlertTable1719546931988.html":{},"entities/City.html":{},"entities/Permission.html":{},"entities/Person.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["column({comment",{"_index":349,"title":{},"body":{"entities/Permission.html":{},"entities/Role.html":{}}}],["column({length",{"_index":160,"title":{},"body":{"entities/City.html":{},"entities/Person.html":{},"entities/User.html":{}}}],["comment",{"_index":48,"title":{},"body":{"classes/AlertTable1719546873577.html":{},"classes/AlertTable1719546931988.html":{},"entities/City.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["common/configs/db.config",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["common/configs/redis.config",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["common/decorator/require",{"_index":478,"title":{},"body":{"controllers/UserController.html":{}}}],["common/modules/redis.module",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["compodoc",{"_index":672,"title":{},"body":{"index.html":{}}}],["compressing",{"_index":634,"title":{},"body":{"dependencies.html":{}}}],["connectorpackage",{"_index":721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log('requirelogin",{"_index":259,"title":{},"body":{"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["console.log('requirepermission",{"_index":363,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["console.log(exception",{"_index":213,"title":{},"body":{"classes/Filter.html":{}}}],["console.log(param",{"_index":321,"title":{},"body":{"classes/MyLogger.html":{}}}],["console.log(res",{"_index":144,"title":{},"body":{"injectables/AppService.html":{}}}],["console.log(user",{"_index":550,"title":{},"body":{"injectables/UserService.html":{}}}],["const",{"_index":83,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Filter.html":{},"guards/LoginGuard.html":{},"classes/MyLogger.html":{},"guards/PermissionGuard.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleOption.html":{},"interfaces/Request.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["constraint",{"_index":57,"title":{},"body":{"classes/AlertTable1719546873577.html":{},"classes/AlertTable1719546931988.html":{}}}],["constructor",{"_index":295,"title":{},"body":{"classes/MyLogger.html":{}}}],["constructor(private",{"_index":487,"title":{},"body":{"controllers/UserController.html":{}}}],["constructor(public",{"_index":81,"title":{},"body":{"controllers/AppController.html":{}}}],["context",{"_index":240,"title":{},"body":{"guards/LoginGuard.html":{},"classes/MyLogger.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{},"injectables/ResponseInterceptor.html":{}}}],["context.getclass",{"_index":255,"title":{},"body":{"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{}}}],["context.gethandler",{"_index":256,"title":{},"body":{"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{}}}],["context.switchtohttp",{"_index":249,"title":{},"body":{"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{}}}],["contextstr",{"_index":324,"title":{},"body":{"classes/MyLogger.html":{}}}],["controller",{"_index":71,"title":{"controllers/AppController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('user",{"_index":486,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":73,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["cors",{"_index":636,"title":{},"body":{"dependencies.html":{}}}],["coverage",{"_index":593,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["createdate",{"_index":384,"title":{},"body":{"entities/Person.html":{}}}],["createdatecolumn",{"_index":166,"title":{},"body":{"entities/City.html":{},"entities/Permission.html":{},"entities/Person.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["createdatecolumn({comment",{"_index":155,"title":{},"body":{"entities/City.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["createlogger",{"_index":304,"title":{},"body":{"classes/MyLogger.html":{}}}],["createtime",{"_index":150,"title":{},"body":{"entities/City.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["ctx",{"_index":204,"title":{},"body":{"classes/Filter.html":{}}}],["ctx.getrequest",{"_index":207,"title":{},"body":{"classes/Filter.html":{}}}],["ctx.getresponse",{"_index":208,"title":{},"body":{"classes/Filter.html":{}}}],["daily",{"_index":310,"title":{},"body":{"classes/MyLogger.html":{},"dependencies.html":{}}}],["daodao",{"_index":143,"title":{},"body":{"injectables/AppService.html":{}}}],["data",{"_index":174,"title":{"interfaces/Data.html":{}},"body":{"interfaces/Data.html":{},"classes/Filter.html":{},"injectables/ResponseInterceptor.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["database",{"_index":710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource",{"_index":724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasourceoptions",{"_index":702,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":154,"title":{},"body":{"entities/City.html":{},"entities/Permission.html":{},"entities/Person.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["date%.log",{"_index":331,"title":{},"body":{"classes/MyLogger.html":{}}}],["datepattern",{"_index":332,"title":{},"body":{"classes/MyLogger.html":{}}}],["dayjs",{"_index":309,"title":{},"body":{"classes/MyLogger.html":{},"dependencies.html":{}}}],["dayjs(date.now()).format('yyyy",{"_index":339,"title":{},"body":{"classes/MyLogger.html":{}}}],["dd",{"_index":335,"title":{},"body":{"classes/MyLogger.html":{}}}],["debug",{"_index":314,"title":{},"body":{"classes/MyLogger.html":{}}}],["declarations",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["declare",{"_index":246,"title":{},"body":{"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["decorators",{"_index":76,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"entities/City.html":{},"classes/LoginUserDto.html":{},"entities/Permission.html":{},"entities/Person.html":{},"classes/RegisterUserDto.html":{},"entities/Role.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["default",{"_index":22,"title":{},"body":{"classes/AlertTable1719546873577.html":{},"classes/AlertTable1719546931988.html":{},"entities/Permission.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":24,"title":{},"body":{"classes/AlertTable1719546873577.html":{},"classes/AlertTable1719546931988.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"entities/City.html":{},"classes/Filter.html":{},"guards/LoginGuard.html":{},"classes/LoginUserDto.html":{},"classes/MyLogger.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"entities/Person.html":{},"modules/RedisModule.html":{},"classes/RegisterUserDto.html":{},"injectables/ResponseInterceptor.html":{},"entities/Role.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["delete",{"_index":62,"title":{},"body":{"classes/AlertTable1719546873577.html":{},"classes/AlertTable1719546931988.html":{},"injectables/UserService.html":{}}}],["dependencies",{"_index":90,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":347,"title":{},"body":{"entities/Permission.html":{}}}],["description",{"_index":460,"title":{},"body":{"controllers/UserController.html":{}}}],["dirname",{"_index":329,"title":{},"body":{"classes/MyLogger.html":{}}}],["documentation",{"_index":594,"title":{},"body":{"coverage.html":{}}}],["down",{"_index":17,"title":{},"body":{"classes/AlertTable1719546873577.html":{},"classes/AlertTable1719546931988.html":{}}}],["down(queryrunner",{"_index":26,"title":{},"body":{"classes/AlertTable1719546873577.html":{},"classes/AlertTable1719546931988.html":{}}}],["drop",{"_index":50,"title":{},"body":{"classes/AlertTable1719546873577.html":{},"classes/AlertTable1719546931988.html":{}}}],["dto/login",{"_index":475,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/register",{"_index":471,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dynamicmodule",{"_index":398,"title":{},"body":{"modules/RedisModule.html":{},"interfaces/RedisModuleOption.html":{}}}],["e2e",{"_index":678,"title":{},"body":{"index.html":{}}}],["entities",{"_index":148,"title":{},"body":{"entities/City.html":{},"entities/Permission.html":{},"entities/Person.html":{},"entities/Role.html":{},"entities/User.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["entities/*.ts']、实体class。注意配置为glob，synchronize",{"_index":717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entities/permission.entity",{"_index":546,"title":{},"body":{"injectables/UserService.html":{}}}],["entities/role.entity",{"_index":545,"title":{},"body":{"injectables/UserService.html":{}}}],["entities/user.entity",{"_index":523,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["entity",{"_index":146,"title":{"entities/City.html":{},"entities/Permission.html":{},"entities/Person.html":{},"entities/Role.html":{},"entities/User.html":{}},"body":{"entities/City.html":{},"entities/Permission.html":{},"entities/Person.html":{},"entities/Role.html":{},"entities/User.html":{},"coverage.html":{}}}],["entitymanager",{"_index":477,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["err",{"_index":273,"title":{},"body":{"guards/LoginGuard.html":{},"interfaces/Request.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["error",{"_index":194,"title":{},"body":{"classes/Filter.html":{},"classes/MyLogger.html":{},"miscellaneous/functions.html":{}}}],["error(err",{"_index":563,"title":{},"body":{"injectables/UserService.html":{}}}],["error(message",{"_index":297,"title":{},"body":{"classes/MyLogger.html":{}}}],["error对象不小心漏到这里，是没有getstatus",{"_index":209,"title":{},"body":{"classes/Filter.html":{}}}],["example",{"_index":498,"title":{},"body":{"controllers/UserController.html":{},"index.html":{}}}],["exception",{"_index":198,"title":{},"body":{"classes/Filter.html":{}}}],["exception.getresponse",{"_index":217,"title":{},"body":{"classes/Filter.html":{}}}],["exception.getstatus",{"_index":215,"title":{},"body":{"classes/Filter.html":{}}}],["exceptionfilter",{"_index":191,"title":{},"body":{"classes/Filter.html":{}}}],["exceptionres",{"_index":216,"title":{},"body":{"classes/Filter.html":{}}}],["exceptionres.message",{"_index":221,"title":{},"body":{"classes/Filter.html":{}}}],["exceptionres.message[0",{"_index":227,"title":{},"body":{"classes/Filter.html":{}}}],["executioncontext",{"_index":179,"title":{},"body":{"interfaces/Data.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{},"injectables/ResponseInterceptor.html":{}}}],["expiresin",{"_index":510,"title":{},"body":{"controllers/UserController.html":{}}}],["export",{"_index":37,"title":{},"body":{"classes/AlertTable1719546873577.html":{},"classes/AlertTable1719546931988.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/City.html":{},"interfaces/Data.html":{},"classes/Filter.html":{},"guards/LoginGuard.html":{},"classes/LoginUserDto.html":{},"classes/MyLogger.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"entities/Person.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleOption.html":{},"classes/RegisterUserDto.html":{},"interfaces/Request.html":{},"injectables/ResponseInterceptor.html":{},"entities/Role.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleOption.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["express",{"_index":203,"title":{},"body":{"classes/Filter.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AlertTable1719546873577.html":{},"classes/AlertTable1719546931988.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/City.html":{},"interfaces/Data.html":{},"classes/Filter.html":{},"guards/LoginGuard.html":{},"classes/LoginUserDto.html":{},"classes/MyLogger.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"entities/Person.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleOption.html":{},"classes/RegisterUserDto.html":{},"interfaces/Request.html":{},"injectables/ResponseInterceptor.html":{},"entities/Role.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["filename",{"_index":330,"title":{},"body":{"classes/MyLogger.html":{}}}],["filter",{"_index":189,"title":{"classes/Filter.html":{}},"body":{"classes/Filter.html":{},"coverage.html":{}}}],["findpermissionsbyroleids",{"_index":527,"title":{},"body":{"injectables/UserService.html":{}}}],["findpermissionsbyroleids(rolesid",{"_index":530,"title":{},"body":{"injectables/UserService.html":{}}}],["findrolesbyuserid",{"_index":528,"title":{},"body":{"injectables/UserService.html":{}}}],["findrolesbyuserid(id",{"_index":533,"title":{},"body":{"injectables/UserService.html":{}}}],["finduser",{"_index":554,"title":{},"body":{"injectables/UserService.html":{}}}],["fk_387a09a362c32ee04b33fc4eaab",{"_index":58,"title":{},"body":{"classes/AlertTable1719546873577.html":{},"classes/AlertTable1719546931988.html":{}}}],["foreign",{"_index":59,"title":{},"body":{"classes/AlertTable1719546873577.html":{},"classes/AlertTable1719546931988.html":{}}}],["format",{"_index":305,"title":{},"body":{"classes/MyLogger.html":{}}}],["format.colorize",{"_index":317,"title":{},"body":{"classes/MyLogger.html":{}}}],["format.combine",{"_index":316,"title":{},"body":{"classes/MyLogger.html":{}}}],["format.combine(format.timestamp",{"_index":327,"title":{},"body":{"classes/MyLogger.html":{}}}],["format.json",{"_index":328,"title":{},"body":{"classes/MyLogger.html":{}}}],["format.printf((param",{"_index":318,"title":{},"body":{"classes/MyLogger.html":{}}}],["forroot",{"_index":393,"title":{},"body":{"modules/RedisModule.html":{}}}],["forroot(options",{"_index":394,"title":{},"body":{"modules/RedisModule.html":{},"interfaces/RedisModuleOption.html":{}}}],["founduser",{"_index":504,"title":{},"body":{"controllers/UserController.html":{}}}],["founduser.id",{"_index":508,"title":{},"body":{"controllers/UserController.html":{}}}],["founduser.username",{"_index":509,"title":{},"body":{"controllers/UserController.html":{}}}],["function",{"_index":611,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":660,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('aaa",{"_index":493,"title":{},"body":{"controllers/UserController.html":{}}}],["get('init",{"_index":488,"title":{},"body":{"controllers/UserController.html":{}}}],["getallandoverride",{"_index":251,"title":{},"body":{"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["gethello",{"_index":75,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":666,"title":{"index.html":{}},"body":{}}],["glob",{"_index":716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["global",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleOption.html":{}}}],["graph",{"_index":688,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":232,"title":{"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":233,"title":{},"body":{"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"overview.html":{}}}],["handler",{"_index":257,"title":{},"body":{"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["handleraaa",{"_index":454,"title":{},"body":{"controllers/UserController.html":{}}}],["handler需增加@requirelogin",{"_index":365,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["header字段，如果没有就是undefined",{"_index":262,"title":{},"body":{"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["hedaodao",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"controllers/UserController.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["hello",{"_index":145,"title":{},"body":{"injectables/AppService.html":{}}}],["hh:mm",{"_index":336,"title":{},"body":{"classes/MyLogger.html":{}}}],["hh:mm:ss",{"_index":340,"title":{},"body":{"classes/MyLogger.html":{}}}],["host",{"_index":195,"title":{},"body":{"classes/Filter.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{},"miscellaneous/variables.html":{}}}],["host.getrequest",{"_index":250,"title":{},"body":{"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{}}}],["host.switchtohttp",{"_index":205,"title":{},"body":{"classes/Filter.html":{}}}],["http",{"_index":639,"title":{},"body":{"dependencies.html":{}}}],["httpexception",{"_index":200,"title":{},"body":{"classes/Filter.html":{},"injectables/UserService.html":{}}}],["httpstatus",{"_index":201,"title":{},"body":{"classes/Filter.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["httpstatus.forbidden",{"_index":551,"title":{},"body":{"injectables/UserService.html":{}}}],["httpstatus.internal_server_error",{"_index":211,"title":{},"body":{"classes/Filter.html":{}}}],["httpstatus.ok",{"_index":500,"title":{},"body":{"controllers/UserController.html":{}}}],["httpstatus.unauthorized",{"_index":501,"title":{},"body":{"controllers/UserController.html":{}}}],["id",{"_index":43,"title":{},"body":{"classes/AlertTable1719546873577.html":{},"classes/AlertTable1719546931988.html":{},"entities/City.html":{},"entities/Permission.html":{},"entities/Person.html":{},"entities/Role.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":595,"title":{},"body":{"coverage.html":{}}}],["idx_387a09a362c32ee04b33fc4eaa",{"_index":53,"title":{},"body":{"classes/AlertTable1719546873577.html":{},"classes/AlertTable1719546931988.html":{}}}],["id、角色id",{"_index":589,"title":{},"body":{"injectables/UserService.html":{}}}],["implements",{"_index":9,"title":{},"body":{"classes/AlertTable1719546873577.html":{},"classes/AlertTable1719546931988.html":{},"interfaces/Data.html":{},"classes/Filter.html":{},"guards/LoginGuard.html":{},"classes/MyLogger.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{},"injectables/ResponseInterceptor.html":{}}}],["import",{"_index":35,"title":{},"body":{"classes/AlertTable1719546873577.html":{},"classes/AlertTable1719546931988.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/City.html":{},"interfaces/Data.html":{},"classes/Filter.html":{},"guards/LoginGuard.html":{},"classes/LoginUserDto.html":{},"classes/MyLogger.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"entities/Person.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleOption.html":{},"classes/RegisterUserDto.html":{},"interfaces/Request.html":{},"injectables/ResponseInterceptor.html":{},"entities/Role.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{}}}],["in(rolesid",{"_index":566,"title":{},"body":{"injectables/UserService.html":{}}}],["index",{"_index":11,"title":{"index.html":{}},"body":{"classes/AlertTable1719546873577.html":{},"classes/AlertTable1719546931988.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"entities/City.html":{},"interfaces/Data.html":{},"classes/Filter.html":{},"guards/LoginGuard.html":{},"classes/LoginUserDto.html":{},"classes/MyLogger.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"entities/Person.html":{},"interfaces/RedisModuleOption.html":{},"classes/RegisterUserDto.html":{},"interfaces/Request.html":{},"injectables/ResponseInterceptor.html":{},"entities/Role.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AlertTable1719546873577.html":{},"classes/AlertTable1719546931988.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/City.html":{},"interfaces/Data.html":{},"classes/Filter.html":{},"guards/LoginGuard.html":{},"classes/LoginUserDto.html":{},"classes/MyLogger.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"entities/Person.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleOption.html":{},"classes/RegisterUserDto.html":{},"interfaces/Request.html":{},"injectables/ResponseInterceptor.html":{},"entities/Role.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["initdata",{"_index":529,"title":{},"body":{"injectables/UserService.html":{}}}],["inituserpermissiondata",{"_index":489,"title":{},"body":{"controllers/UserController.html":{}}}],["inject",{"_index":140,"title":{},"body":{"injectables/AppService.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{},"controllers/UserController.html":{}}}],["inject('redis",{"_index":138,"title":{},"body":{"injectables/AppService.html":{}}}],["inject(jwtservice",{"_index":247,"title":{},"body":{"guards/LoginGuard.html":{},"interfaces/Request.html":{},"controllers/UserController.html":{}}}],["inject(reflector",{"_index":248,"title":{},"body":{"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{}}}],["inject(userservice",{"_index":359,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["injectable",{"_index":131,"title":{"injectables/AppService.html":{},"injectables/ResponseInterceptor.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"interfaces/Data.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{},"injectables/ResponseInterceptor.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":132,"title":{},"body":{"injectables/AppService.html":{},"injectables/ResponseInterceptor.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectentitymanager",{"_index":476,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["injectrepository",{"_index":543,"title":{},"body":{"injectables/UserService.html":{}}}],["injectrepository(user",{"_index":541,"title":{},"body":{"injectables/UserService.html":{}}}],["install",{"_index":722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["install运行app",{"_index":669,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":214,"title":{},"body":{"classes/Filter.html":{}}}],["int",{"_index":44,"title":{},"body":{"classes/AlertTable1719546873577.html":{},"classes/AlertTable1719546931988.html":{}}}],["intercept",{"_index":426,"title":{},"body":{"injectables/ResponseInterceptor.html":{}}}],["intercept(context",{"_index":185,"title":{},"body":{"interfaces/Data.html":{},"injectables/ResponseInterceptor.html":{}}}],["interface",{"_index":173,"title":{"interfaces/Data.html":{},"interfaces/RedisModuleOption.html":{},"interfaces/Request.html":{}},"body":{"interfaces/Data.html":{},"guards/LoginGuard.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleOption.html":{},"interfaces/Request.html":{},"injectables/ResponseInterceptor.html":{},"coverage.html":{}}}],["interfaces",{"_index":175,"title":{},"body":{"interfaces/Data.html":{},"interfaces/RedisModuleOption.html":{},"interfaces/Request.html":{},"overview.html":{}}}],["ioredis",{"_index":141,"title":{},"body":{"injectables/AppService.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleOption.html":{},"dependencies.html":{}}}],["ioredis/built/redis/redisoptions",{"_index":401,"title":{},"body":{"modules/RedisModule.html":{},"interfaces/RedisModuleOption.html":{}}}],["isdefined",{"_index":243,"title":{},"body":{"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{}}}],["isdefined(authorization",{"_index":263,"title":{},"body":{"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["isdefined(request.userid",{"_index":364,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["isnotempty",{"_index":285,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["isnotempty({message",{"_index":421,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["isstring",{"_index":286,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["isstring({message",{"_index":408,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["item.id",{"_index":373,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["item.permissions.foreach((permission",{"_index":377,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["jack",{"_index":569,"title":{},"body":{"injectables/UserService.html":{}}}],["jointable",{"_index":438,"title":{},"body":{"entities/Role.html":{},"entities/User.html":{}}}],["jwtdata",{"_index":269,"title":{},"body":{"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["jwtdata.userid",{"_index":272,"title":{},"body":{"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["jwtmodule",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["jwtmodule.register",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["jwtservice",{"_index":235,"title":{},"body":{"guards/LoginGuard.html":{},"interfaces/Request.html":{},"controllers/UserController.html":{}}}],["key",{"_index":47,"title":{},"body":{"classes/AlertTable1719546873577.html":{},"classes/AlertTable1719546931988.html":{}}}],["legend",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["length",{"_index":172,"title":{},"body":{"entities/City.html":{},"entities/Person.html":{},"classes/RegisterUserDto.html":{},"entities/User.html":{}}}],["length(6",{"_index":424,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["level",{"_index":313,"title":{},"body":{"classes/MyLogger.html":{}}}],["licensed",{"_index":683,"title":{},"body":{"index.html":{}}}],["localhost",{"_index":706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["log",{"_index":293,"title":{},"body":{"classes/MyLogger.html":{}}}],["log(message",{"_index":300,"title":{},"body":{"classes/MyLogger.html":{}}}],["logger",{"_index":292,"title":{},"body":{"classes/MyLogger.html":{},"injectables/UserService.html":{}}}],["loggerservice",{"_index":291,"title":{},"body":{"classes/MyLogger.html":{}}}],["logging",{"_index":714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["login",{"_index":254,"title":{},"body":{"guards/LoginGuard.html":{},"interfaces/Request.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["login(loginuserdto",{"_index":458,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["login.decorator",{"_index":479,"title":{},"body":{"controllers/UserController.html":{}}}],["login.decorator.ts",{"_index":607,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["loginguard",{"_index":117,"title":{"guards/LoginGuard.html":{}},"body":{"modules/AppModule.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{},"coverage.html":{}}}],["loginuserdto",{"_index":275,"title":{"classes/LoginUserDto.html":{}},"body":{"classes/LoginUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["loginuserdto.username",{"_index":548,"title":{},"body":{"injectables/UserService.html":{}}}],["loginuserdto})@apiresponse({status",{"_index":462,"title":{},"body":{"controllers/UserController.html":{}}}],["manytomany",{"_index":439,"title":{},"body":{"entities/Role.html":{},"entities/User.html":{}}}],["manytomany(undefined)@jointable({name",{"_index":434,"title":{},"body":{"entities/Role.html":{},"entities/User.html":{}}}],["map",{"_index":181,"title":{},"body":{"interfaces/Data.html":{},"injectables/ResponseInterceptor.html":{}}}],["map((data",{"_index":188,"title":{},"body":{"interfaces/Data.html":{},"injectables/ResponseInterceptor.html":{}}}],["matches",{"_index":423,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["matches(/^[a",{"_index":425,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["matching",{"_index":67,"title":{},"body":{"classes/AlertTable1719546873577.html":{},"classes/AlertTable1719546931988.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/City.html":{},"interfaces/Data.html":{},"classes/Filter.html":{},"guards/LoginGuard.html":{},"classes/LoginUserDto.html":{},"classes/MyLogger.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"entities/Person.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleOption.html":{},"classes/RegisterUserDto.html":{},"interfaces/Request.html":{},"injectables/ResponseInterceptor.html":{},"entities/Role.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["maxsize",{"_index":337,"title":{},"body":{"classes/MyLogger.html":{}}}],["md5",{"_index":544,"title":{},"body":{"injectables/UserService.html":{},"dependencies.html":{}}}],["md5(loginuserdto.password",{"_index":552,"title":{},"body":{"injectables/UserService.html":{}}}],["md5(registeruserdto.password",{"_index":561,"title":{},"body":{"injectables/UserService.html":{}}}],["message",{"_index":218,"title":{},"body":{"classes/Filter.html":{},"classes/LoginUserDto.html":{},"classes/MyLogger.html":{},"classes/RegisterUserDto.html":{}}}],["metadata",{"_index":651,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":14,"title":{},"body":{"classes/AlertTable1719546873577.html":{},"classes/AlertTable1719546931988.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Filter.html":{},"guards/LoginGuard.html":{},"classes/MyLogger.html":{},"guards/PermissionGuard.html":{},"modules/RedisModule.html":{},"injectables/ResponseInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["middleware",{"_index":641,"title":{},"body":{"dependencies.html":{}}}],["migration:generate",{"_index":673,"title":{},"body":{"index.html":{}}}],["migration:revert",{"_index":675,"title":{},"body":{"index.html":{}}}],["migration:run",{"_index":674,"title":{},"body":{"index.html":{}}}],["migrationinterface",{"_index":10,"title":{},"body":{"classes/AlertTable1719546873577.html":{},"classes/AlertTable1719546931988.html":{}}}],["migrations",{"_index":727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["migrations/1719546873577",{"_index":6,"title":{},"body":{"classes/AlertTable1719546873577.html":{},"coverage.html":{}}}],["migrations/1719546931988",{"_index":69,"title":{},"body":{"classes/AlertTable1719546931988.html":{},"coverage.html":{}}}],["miscellaneous",{"_index":659,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":682,"title":{},"body":{"index.html":{}}}],["mm",{"_index":334,"title":{},"body":{"classes/MyLogger.html":{}}}],["module",{"_index":87,"title":{"modules/AppModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"guards/LoginGuard.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleOption.html":{},"interfaces/Request.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":89,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/RedisModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["msg",{"_index":212,"title":{},"body":{"classes/Filter.html":{},"miscellaneous/functions.html":{}}}],["mylogger",{"_index":289,"title":{"classes/MyLogger.html":{}},"body":{"classes/MyLogger.html":{},"coverage.html":{}}}],["mysql",{"_index":703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mysql2",{"_index":646,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["name",{"_index":13,"title":{},"body":{"classes/AlertTable1719546873577.html":{},"classes/AlertTable1719546931988.html":{},"entities/City.html":{},"classes/Filter.html":{},"guards/LoginGuard.html":{},"classes/LoginUserDto.html":{},"classes/MyLogger.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"entities/Person.html":{},"modules/RedisModule.html":{},"injectables/ResponseInterceptor.html":{},"entities/Role.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["nest",{"_index":681,"title":{},"body":{"index.html":{}}}],["nest_practice",{"_index":711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nestinterceptor",{"_index":180,"title":{},"body":{"interfaces/Data.html":{},"injectables/ResponseInterceptor.html":{}}}],["nestjs/common",{"_index":78,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/Data.html":{},"classes/Filter.html":{},"guards/LoginGuard.html":{},"classes/MyLogger.html":{},"guards/PermissionGuard.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleOption.html":{},"interfaces/Request.html":{},"injectables/ResponseInterceptor.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":245,"title":{},"body":{"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":619,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":621,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":288,"title":{},"body":{"classes/LoginUserDto.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["new",{"_index":265,"title":{},"body":{"guards/LoginGuard.html":{},"classes/MyLogger.html":{},"guards/PermissionGuard.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleOption.html":{},"interfaces/Request.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newuser",{"_index":558,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.password",{"_index":560,"title":{},"body":{"injectables/UserService.html":{}}}],["newuser.username",{"_index":559,"title":{},"body":{"injectables/UserService.html":{}}}],["next",{"_index":186,"title":{},"body":{"interfaces/Data.html":{},"injectables/ResponseInterceptor.html":{}}}],["next.handle().pipe",{"_index":187,"title":{},"body":{"interfaces/Data.html":{},"injectables/ResponseInterceptor.html":{}}}],["npm",{"_index":648,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["null",{"_index":45,"title":{},"body":{"classes/AlertTable1719546873577.html":{},"classes/AlertTable1719546931988.html":{},"classes/Filter.html":{}}}],["number",{"_index":157,"title":{},"body":{"entities/City.html":{},"guards/LoginGuard.html":{},"entities/Permission.html":{},"entities/Person.html":{},"interfaces/Request.html":{},"entities/Role.html":{},"entities/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["object",{"_index":220,"title":{},"body":{"classes/Filter.html":{}}}],["observable",{"_index":182,"title":{},"body":{"interfaces/Data.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{},"injectables/ResponseInterceptor.html":{}}}],["ok",{"_index":665,"title":{},"body":{"miscellaneous/functions.html":{}}}],["optional",{"_index":30,"title":{},"body":{"classes/AlertTable1719546873577.html":{},"classes/AlertTable1719546931988.html":{},"classes/Filter.html":{},"guards/LoginGuard.html":{},"classes/MyLogger.html":{},"guards/PermissionGuard.html":{},"modules/RedisModule.html":{},"injectables/ResponseInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["optionalparams",{"_index":298,"title":{},"body":{"classes/MyLogger.html":{}}}],["optionalparams[0",{"_index":342,"title":{},"body":{"classes/MyLogger.html":{}}}],["options",{"_index":397,"title":{},"body":{"modules/RedisModule.html":{}}}],["options.global",{"_index":405,"title":{},"body":{"modules/RedisModule.html":{},"interfaces/RedisModuleOption.html":{}}}],["ormconfig",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ormconfigforcli",{"_index":604,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":690,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":616,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":320,"title":{},"body":{"classes/MyLogger.html":{}}}],["parameters",{"_index":29,"title":{},"body":{"classes/AlertTable1719546873577.html":{},"classes/AlertTable1719546931988.html":{},"classes/Filter.html":{},"guards/LoginGuard.html":{},"classes/MyLogger.html":{},"guards/PermissionGuard.html":{},"modules/RedisModule.html":{},"injectables/ResponseInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["passthrough",{"_index":503,"title":{},"body":{"controllers/UserController.html":{}}}],["password",{"_index":151,"title":{},"body":{"entities/City.html":{},"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{},"entities/User.html":{},"miscellaneous/variables.html":{}}}],["password'})@isstring({message",{"_index":279,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["password类型校验失败'})@isnotempty({message",{"_index":280,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["password类型校验失败'})@length(6",{"_index":409,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["password长度在6",{"_index":411,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["permission",{"_index":345,"title":{"entities/Permission.html":{}},"body":{"entities/Permission.html":{},"guards/PermissionGuard.html":{},"entities/Role.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["permission.decorator",{"_index":480,"title":{},"body":{"controllers/UserController.html":{}}}],["permission.decorator.ts",{"_index":608,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["permission.entity",{"_index":440,"title":{},"body":{"entities/Role.html":{}}}],["permission1",{"_index":579,"title":{},"body":{"injectables/UserService.html":{}}}],["permission1.desc",{"_index":581,"title":{},"body":{"injectables/UserService.html":{}}}],["permission1.name",{"_index":580,"title":{},"body":{"injectables/UserService.html":{}}}],["permission2",{"_index":582,"title":{},"body":{"injectables/UserService.html":{}}}],["permission2.desc",{"_index":584,"title":{},"body":{"injectables/UserService.html":{}}}],["permission2.name",{"_index":583,"title":{},"body":{"injectables/UserService.html":{}}}],["permissionguard",{"_index":119,"title":{"guards/PermissionGuard.html":{}},"body":{"modules/AppModule.html":{},"guards/PermissionGuard.html":{},"coverage.html":{}}}],["permissionnameset",{"_index":374,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["permissionnameset.add(permission.name",{"_index":378,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["permissionnameset.has(requirepermissionname",{"_index":380,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["permissions",{"_index":430,"title":{},"body":{"entities/Role.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["person",{"_index":381,"title":{"entities/Person.html":{}},"body":{"entities/Person.html":{},"coverage.html":{}}}],["pnpm",{"_index":668,"title":{},"body":{"index.html":{}}}],["poolsize",{"_index":719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["port",{"_index":707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["post",{"_index":470,"title":{},"body":{"controllers/UserController.html":{}}}],["post('login",{"_index":464,"title":{},"body":{"controllers/UserController.html":{}}}],["post('register",{"_index":467,"title":{},"body":{"controllers/UserController.html":{}}}],["postgres、oracle、sqllite",{"_index":705,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefix",{"_index":453,"title":{},"body":{"controllers/UserController.html":{}}}],["primary",{"_index":46,"title":{},"body":{"classes/AlertTable1719546873577.html":{},"classes/AlertTable1719546931988.html":{}}}],["primarygeneratedcolumn",{"_index":158,"title":{},"body":{"entities/City.html":{},"entities/Permission.html":{},"entities/Person.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["primarygeneratedcolumn({comment",{"_index":351,"title":{},"body":{"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["private",{"_index":134,"title":{},"body":{"injectables/AppService.html":{},"guards/LoginGuard.html":{},"classes/MyLogger.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["promise",{"_index":32,"title":{},"body":{"classes/AlertTable1719546873577.html":{},"classes/AlertTable1719546931988.html":{},"controllers/AppController.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{}}}],["properties",{"_index":12,"title":{"properties.html":{}},"body":{"classes/AlertTable1719546873577.html":{},"classes/AlertTable1719546931988.html":{},"injectables/AppService.html":{},"entities/City.html":{},"interfaces/Data.html":{},"guards/LoginGuard.html":{},"classes/LoginUserDto.html":{},"classes/MyLogger.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"entities/Person.html":{},"interfaces/RedisModuleOption.html":{},"classes/RegisterUserDto.html":{},"interfaces/Request.html":{},"entities/Role.html":{},"entities/User.html":{},"injectables/UserService.html":{},"properties.html":{}}}],["provide",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleOption.html":{}}}],["provider",{"_index":399,"title":{},"body":{"modules/RedisModule.html":{},"interfaces/RedisModuleOption.html":{}}}],["providers",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleOption.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["proxy",{"_index":627,"title":{},"body":{"dependencies.html":{}}}],["public",{"_index":15,"title":{},"body":{"classes/AlertTable1719546873577.html":{},"classes/AlertTable1719546931988.html":{}}}],["queryrunner",{"_index":27,"title":{},"body":{"classes/AlertTable1719546873577.html":{},"classes/AlertTable1719546931988.html":{}}}],["queryrunner.query(`alter",{"_index":39,"title":{},"body":{"classes/AlertTable1719546873577.html":{},"classes/AlertTable1719546931988.html":{}}}],["queryrunner.query(`create",{"_index":56,"title":{},"body":{"classes/AlertTable1719546873577.html":{},"classes/AlertTable1719546931988.html":{}}}],["queryrunner.query(`drop",{"_index":52,"title":{},"body":{"classes/AlertTable1719546873577.html":{},"classes/AlertTable1719546931988.html":{}}}],["readonly",{"_index":82,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["redis",{"_index":135,"title":{},"body":{"injectables/AppService.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleOption.html":{}}}],["redis(options.redisconfig",{"_index":402,"title":{},"body":{"modules/RedisModule.html":{},"interfaces/RedisModuleOption.html":{}}}],["redisconfig",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleOption.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["redismodule",{"_index":99,"title":{"modules/RedisModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleOption.html":{},"modules.html":{},"overview.html":{}}}],["redismodule.forroot",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["redismoduleoption",{"_index":395,"title":{"interfaces/RedisModuleOption.html":{}},"body":{"modules/RedisModule.html":{},"interfaces/RedisModuleOption.html":{},"coverage.html":{}}}],["redisoptions",{"_index":400,"title":{},"body":{"modules/RedisModule.html":{},"interfaces/RedisModuleOption.html":{},"miscellaneous/variables.html":{}}}],["redisprovider",{"_index":403,"title":{},"body":{"modules/RedisModule.html":{},"interfaces/RedisModuleOption.html":{}}}],["references",{"_index":60,"title":{},"body":{"classes/AlertTable1719546873577.html":{},"classes/AlertTable1719546931988.html":{}}}],["reflect",{"_index":650,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":236,"title":{},"body":{"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{}}}],["refreshtoken",{"_index":512,"title":{},"body":{"controllers/UserController.html":{}}}],["register",{"_index":455,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["register(@body(validationpipe",{"_index":516,"title":{},"body":{"controllers/UserController.html":{}}}],["register(registeruserdto",{"_index":466,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["registeruserdto",{"_index":406,"title":{"classes/RegisterUserDto.html":{}},"body":{"classes/RegisterUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["registeruserdto.username",{"_index":556,"title":{},"body":{"injectables/UserService.html":{}}}],["relations",{"_index":549,"title":{},"body":{"injectables/UserService.html":{}}}],["repository",{"_index":540,"title":{},"body":{"injectables/UserService.html":{}}}],["request",{"_index":206,"title":{"interfaces/Request.html":{}},"body":{"classes/Filter.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{},"coverage.html":{}}}],["request.header('authorization",{"_index":261,"title":{},"body":{"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["request.userid",{"_index":271,"title":{},"body":{"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{}}}],["require",{"_index":362,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["required",{"_index":497,"title":{},"body":{"controllers/UserController.html":{}}}],["requirelogin",{"_index":252,"title":{},"body":{"guards/LoginGuard.html":{},"interfaces/Request.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["requirelogin()@requirepermission('add')@get('aaa",{"_index":456,"title":{},"body":{"controllers/UserController.html":{}}}],["requirepermission",{"_index":360,"title":{},"body":{"guards/PermissionGuard.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["requirepermission('add",{"_index":492,"title":{},"body":{"controllers/UserController.html":{}}}],["requirepermission.every((requirepermissionname",{"_index":379,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["res",{"_index":84,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/UserController.html":{}}}],["res.setheader('access_token",{"_index":514,"title":{},"body":{"controllers/UserController.html":{}}}],["res.setheader('refresh_token",{"_index":515,"title":{},"body":{"controllers/UserController.html":{}}}],["reset",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["response",{"_index":202,"title":{},"body":{"classes/Filter.html":{},"controllers/UserController.html":{}}}],["response.message是个数组其中是validationpipe",{"_index":226,"title":{},"body":{"classes/Filter.html":{}}}],["response.status(status).json",{"_index":229,"title":{},"body":{"classes/Filter.html":{}}}],["responseerror",{"_index":614,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["responseerror(err",{"_index":663,"title":{},"body":{"miscellaneous/functions.html":{}}}],["responseinterceptor",{"_index":184,"title":{"injectables/ResponseInterceptor.html":{}},"body":{"interfaces/Data.html":{},"injectables/ResponseInterceptor.html":{},"coverage.html":{}}}],["responsesuccess",{"_index":473,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["responsesuccess(data",{"_index":664,"title":{},"body":{"miscellaneous/functions.html":{}}}],["responsesuccess(null",{"_index":491,"title":{},"body":{"controllers/UserController.html":{}}}],["results",{"_index":66,"title":{},"body":{"classes/AlertTable1719546873577.html":{},"classes/AlertTable1719546931988.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/City.html":{},"interfaces/Data.html":{},"classes/Filter.html":{},"guards/LoginGuard.html":{},"classes/LoginUserDto.html":{},"classes/MyLogger.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"entities/Person.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleOption.html":{},"classes/RegisterUserDto.html":{},"interfaces/Request.html":{},"injectables/ResponseInterceptor.html":{},"entities/Role.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":86,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/Data.html":{},"guards/LoginGuard.html":{},"classes/MyLogger.html":{},"guards/PermissionGuard.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleOption.html":{},"interfaces/Request.html":{},"injectables/ResponseInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":31,"title":{},"body":{"classes/AlertTable1719546873577.html":{},"classes/AlertTable1719546931988.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Filter.html":{},"guards/LoginGuard.html":{},"classes/MyLogger.html":{},"guards/PermissionGuard.html":{},"modules/RedisModule.html":{},"injectables/ResponseInterceptor.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["role",{"_index":428,"title":{"entities/Role.html":{}},"body":{"entities/Role.html":{},"entities/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["role.entity",{"_index":448,"title":{},"body":{"entities/User.html":{}}}],["role1",{"_index":575,"title":{},"body":{"injectables/UserService.html":{}}}],["role1.name",{"_index":576,"title":{},"body":{"injectables/UserService.html":{}}}],["role1.permissions",{"_index":585,"title":{},"body":{"injectables/UserService.html":{}}}],["role2",{"_index":577,"title":{},"body":{"injectables/UserService.html":{}}}],["role2.name",{"_index":578,"title":{},"body":{"injectables/UserService.html":{}}}],["role2.permissions",{"_index":586,"title":{},"body":{"injectables/UserService.html":{}}}],["role_permission_relation",{"_index":435,"title":{},"body":{"entities/Role.html":{}}}],["roleid",{"_index":51,"title":{},"body":{"classes/AlertTable1719546873577.html":{},"classes/AlertTable1719546931988.html":{}}}],["roles",{"_index":366,"title":{},"body":{"guards/PermissionGuard.html":{},"entities/User.html":{},"injectables/UserService.html":{}}}],["roles.length",{"_index":368,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["roles.map((item",{"_index":372,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["rolesid",{"_index":532,"title":{},"body":{"injectables/UserService.html":{}}}],["rolesjoinpermissions",{"_index":370,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["rolesjoinpermissions.foreach((item",{"_index":376,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["root",{"_index":709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rotate",{"_index":311,"title":{},"body":{"classes/MyLogger.html":{},"dependencies.html":{}}}],["run",{"_index":676,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":183,"title":{},"body":{"interfaces/Data.html":{},"guards/LoginGuard.html":{},"interfaces/Request.html":{},"injectables/ResponseInterceptor.html":{},"dependencies.html":{}}}],["save",{"_index":723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schema",{"_index":712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["script脚本migration:run、migration:revert中使用。如果放在baseconfig中，orm",{"_index":726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["secret",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["set",{"_index":375,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["setmetadata('require",{"_index":731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AlertTable1719546873577.html":{},"classes/AlertTable1719546931988.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"entities/City.html":{},"interfaces/Data.html":{},"classes/Filter.html":{},"guards/LoginGuard.html":{},"classes/LoginUserDto.html":{},"classes/MyLogger.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"entities/Person.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleOption.html":{},"classes/RegisterUserDto.html":{},"interfaces/Request.html":{},"injectables/ResponseInterceptor.html":{},"entities/Role.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["sql",{"_index":715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../db.config.ts",{"_index":699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":661,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../redis.config.ts",{"_index":700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../require",{"_index":701,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../responseutil.ts",{"_index":662,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":74,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":77,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":133,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:7",{"_index":139,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:9",{"_index":136,"title":{},"body":{"injectables/AppService.html":{}}}],["src/common/configs/db.config.ts",{"_index":600,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/configs/redis.config.ts",{"_index":605,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/decorator/require",{"_index":606,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/filters/exception.filter.ts",{"_index":190,"title":{},"body":{"classes/Filter.html":{},"coverage.html":{}}}],["src/common/filters/exception.filter.ts:12",{"_index":197,"title":{},"body":{"classes/Filter.html":{}}}],["src/common/interceptors/response.interceptor.ts",{"_index":176,"title":{},"body":{"interfaces/Data.html":{},"injectables/ResponseInterceptor.html":{},"coverage.html":{}}}],["src/common/interceptors/response.interceptor.ts:15",{"_index":427,"title":{},"body":{"injectables/ResponseInterceptor.html":{}}}],["src/common/logger/mylogger.ts",{"_index":290,"title":{},"body":{"classes/MyLogger.html":{},"coverage.html":{}}}],["src/common/logger/mylogger.ts:38",{"_index":301,"title":{},"body":{"classes/MyLogger.html":{}}}],["src/common/logger/mylogger.ts:42",{"_index":303,"title":{},"body":{"classes/MyLogger.html":{}}}],["src/common/logger/mylogger.ts:46",{"_index":299,"title":{},"body":{"classes/MyLogger.html":{}}}],["src/common/logger/mylogger.ts:8",{"_index":296,"title":{},"body":{"classes/MyLogger.html":{}}}],["src/common/modules/redis.module.ts",{"_index":391,"title":{},"body":{"modules/RedisModule.html":{},"interfaces/RedisModuleOption.html":{},"coverage.html":{}}}],["src/common/modules/redis.module.ts:12",{"_index":396,"title":{},"body":{"modules/RedisModule.html":{}}}],["src/entities/city.entity.ts",{"_index":149,"title":{},"body":{"entities/City.html":{},"coverage.html":{}}}],["src/entities/city.entity.ts:19",{"_index":159,"title":{},"body":{"entities/City.html":{}}}],["src/entities/city.entity.ts:25",{"_index":165,"title":{},"body":{"entities/City.html":{}}}],["src/entities/city.entity.ts:31",{"_index":162,"title":{},"body":{"entities/City.html":{}}}],["src/entities/city.entity.ts:36",{"_index":156,"title":{},"body":{"entities/City.html":{}}}],["src/entities/city.entity.ts:41",{"_index":164,"title":{},"body":{"entities/City.html":{}}}],["src/entities/person.entity.ts",{"_index":382,"title":{},"body":{"entities/Person.html":{},"coverage.html":{}}}],["src/entities/person.entity.ts:15",{"_index":388,"title":{},"body":{"entities/Person.html":{}}}],["src/entities/person.entity.ts:20",{"_index":389,"title":{},"body":{"entities/Person.html":{}}}],["src/entities/person.entity.ts:23",{"_index":386,"title":{},"body":{"entities/Person.html":{}}}],["src/entities/person.entity.ts:26",{"_index":387,"title":{},"body":{"entities/Person.html":{}}}],["src/entities/person.entity.ts:29",{"_index":390,"title":{},"body":{"entities/Person.html":{}}}],["src/main.ts",{"_index":610,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/migrations/*.ts",{"_index":728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/user/dto/login",{"_index":276,"title":{},"body":{"classes/LoginUserDto.html":{},"coverage.html":{}}}],["src/user/dto/register",{"_index":407,"title":{},"body":{"classes/RegisterUserDto.html":{},"coverage.html":{}}}],["src/user/entities/permission.entity.ts",{"_index":346,"title":{},"body":{"entities/Permission.html":{},"coverage.html":{}}}],["src/user/entities/permission.entity.ts:12",{"_index":352,"title":{},"body":{"entities/Permission.html":{}}}],["src/user/entities/permission.entity.ts:15",{"_index":353,"title":{},"body":{"entities/Permission.html":{}}}],["src/user/entities/permission.entity.ts:18",{"_index":350,"title":{},"body":{"entities/Permission.html":{}}}],["src/user/entities/permission.entity.ts:23",{"_index":348,"title":{},"body":{"entities/Permission.html":{}}}],["src/user/entities/permission.entity.ts:28",{"_index":354,"title":{},"body":{"entities/Permission.html":{}}}],["src/user/entities/role.entity.ts",{"_index":429,"title":{},"body":{"entities/Role.html":{},"coverage.html":{}}}],["src/user/entities/role.entity.ts:17",{"_index":432,"title":{},"body":{"entities/Role.html":{}}}],["src/user/entities/role.entity.ts:20",{"_index":433,"title":{},"body":{"entities/Role.html":{}}}],["src/user/entities/role.entity.ts:25",{"_index":431,"title":{},"body":{"entities/Role.html":{}}}],["src/user/entities/role.entity.ts:30",{"_index":437,"title":{},"body":{"entities/Role.html":{}}}],["src/user/entities/role.entity.ts:34",{"_index":436,"title":{},"body":{"entities/Role.html":{}}}],["src/user/entities/user.entity.ts",{"_index":441,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/user/entities/user.entity.ts:15",{"_index":443,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:21",{"_index":447,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:27",{"_index":444,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:32",{"_index":442,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:37",{"_index":446,"title":{},"body":{"entities/User.html":{}}}],["src/user/entities/user.entity.ts:41",{"_index":445,"title":{},"body":{"entities/User.html":{}}}],["src/user/login.guard.ts",{"_index":234,"title":{},"body":{"guards/LoginGuard.html":{},"interfaces/Request.html":{},"coverage.html":{}}}],["src/user/login.guard.ts:28",{"_index":239,"title":{},"body":{"guards/LoginGuard.html":{}}}],["src/user/permission.guard.ts",{"_index":355,"title":{},"body":{"guards/PermissionGuard.html":{},"coverage.html":{}}}],["src/user/permission.guard.ts:21",{"_index":357,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["src/user/user.controller.ts",{"_index":452,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:106",{"_index":468,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:43",{"_index":457,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:79",{"_index":465,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module.ts",{"_index":521,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.ts",{"_index":525,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:14",{"_index":539,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:17",{"_index":542,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:20",{"_index":538,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:22",{"_index":536,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:44",{"_index":537,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:65",{"_index":534,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:76",{"_index":531,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:87",{"_index":535,"title":{},"body":{"injectables/UserService.html":{}}}],["src/utils/responseutil.ts",{"_index":613,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start:dev",{"_index":670,"title":{},"body":{"index.html":{}}}],["start:prod",{"_index":671,"title":{},"body":{"index.html":{}}}],["started",{"_index":667,"title":{"index.html":{}},"body":{}}],["statements",{"_index":596,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":392,"title":{},"body":{"modules/RedisModule.html":{},"interfaces/RedisModuleOption.html":{}}}],["status",{"_index":210,"title":{},"body":{"classes/Filter.html":{},"controllers/UserController.html":{}}}],["string",{"_index":21,"title":{},"body":{"classes/AlertTable1719546873577.html":{},"classes/AlertTable1719546931988.html":{},"entities/City.html":{},"classes/Filter.html":{},"classes/LoginUserDto.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"entities/Person.html":{},"classes/RegisterUserDto.html":{},"entities/Role.html":{},"entities/User.html":{},"controllers/UserController.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["string})@apiresponse({status",{"_index":463,"title":{},"body":{"controllers/UserController.html":{}}}],["subscribers",{"_index":718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["summary",{"_index":494,"title":{},"body":{"controllers/UserController.html":{}}}],["support",{"_index":685,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":686,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["synchronize:true自动将表结构的变动同步到数据库，这十分不安全的。migrations会生成sql",{"_index":725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["t",{"_index":177,"title":{},"body":{"interfaces/Data.html":{},"injectables/ResponseInterceptor.html":{}}}],["table",{"_index":40,"title":{},"body":{"classes/AlertTable1719546873577.html":{},"classes/AlertTable1719546931988.html":{},"entities/City.html":{},"coverage.html":{}}}],["table.ts",{"_index":8,"title":{},"body":{"classes/AlertTable1719546873577.html":{},"classes/AlertTable1719546931988.html":{},"coverage.html":{}}}],["table.ts:19",{"_index":28,"title":{},"body":{"classes/AlertTable1719546873577.html":{},"classes/AlertTable1719546931988.html":{}}}],["table.ts:4",{"_index":25,"title":{},"body":{"classes/AlertTable1719546873577.html":{},"classes/AlertTable1719546931988.html":{}}}],["table.ts:6",{"_index":34,"title":{},"body":{"classes/AlertTable1719546873577.html":{},"classes/AlertTable1719546931988.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":615,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":677,"title":{},"body":{"index.html":{}}}],["test:covlicense",{"_index":680,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":679,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":85,"title":{},"body":{"controllers/AppController.html":{}}}],["this.entitymanager.find(role",{"_index":565,"title":{},"body":{"injectables/UserService.html":{}}}],["this.entitymanager.findone(user",{"_index":564,"title":{},"body":{"injectables/UserService.html":{}}}],["this.entitymanager.save(permission",{"_index":590,"title":{},"body":{"injectables/UserService.html":{}}}],["this.entitymanager.save(role",{"_index":591,"title":{},"body":{"injectables/UserService.html":{}}}],["this.entitymanager.save(user",{"_index":592,"title":{},"body":{"injectables/UserService.html":{}}}],["this.jwtservice.signasync",{"_index":507,"title":{},"body":{"controllers/UserController.html":{}}}],["this.jwtservice.verify(authorization",{"_index":270,"title":{},"body":{"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["this.logger",{"_index":312,"title":{},"body":{"classes/MyLogger.html":{}}}],["this.logger.log('error",{"_index":344,"title":{},"body":{"classes/MyLogger.html":{}}}],["this.logger.log('info",{"_index":341,"title":{},"body":{"classes/MyLogger.html":{}}}],["this.logger.log('warn",{"_index":343,"title":{},"body":{"classes/MyLogger.html":{}}}],["this.redis.sadd('he",{"_index":142,"title":{},"body":{"injectables/AppService.html":{}}}],["this.reflector.getallandoverride",{"_index":361,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["this.reflector.getallandoverride('require",{"_index":253,"title":{},"body":{"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["this.userrepository.findone",{"_index":547,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.findoneby",{"_index":555,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.save(newuser",{"_index":562,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.findpermissionsbyroleids",{"_index":371,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["this.userservice.findrolesbyuserid(userid))?.roles",{"_index":367,"title":{},"body":{"guards/PermissionGuard.html":{}}}],["this.userservice.initdata",{"_index":490,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.login(loginuserdto",{"_index":505,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.register(registeruserdto",{"_index":517,"title":{},"body":{"controllers/UserController.html":{}}}],["throw",{"_index":264,"title":{},"body":{"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{},"injectables/UserService.html":{}}}],["throw抛出具体的httpexception子类，例如notfoundexception、badrequestexception",{"_index":222,"title":{},"body":{"classes/Filter.html":{}}}],["throw抛出的httpexception",{"_index":228,"title":{},"body":{"classes/Filter.html":{}}}],["time",{"_index":319,"title":{},"body":{"classes/MyLogger.html":{}}}],["token正确则返回的{...payload,iat:签发时间戳,exp",{"_index":268,"title":{},"body":{"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["tom",{"_index":573,"title":{},"body":{"injectables/UserService.html":{}}}],["transports",{"_index":306,"title":{},"body":{"classes/MyLogger.html":{}}}],["transports.console",{"_index":315,"title":{},"body":{"classes/MyLogger.html":{}}}],["transports.dailyrotatefile",{"_index":326,"title":{},"body":{"classes/MyLogger.html":{}}}],["tree",{"_index":167,"title":{},"body":{"entities/City.html":{}}}],["tree('closure",{"_index":171,"title":{},"body":{"entities/City.html":{}}}],["treechildren",{"_index":168,"title":{},"body":{"entities/City.html":{}}}],["treeparent",{"_index":169,"title":{},"body":{"entities/City.html":{}}}],["true",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":266,"title":{},"body":{"guards/LoginGuard.html":{},"interfaces/Request.html":{},"injectables/UserService.html":{}}}],["type",{"_index":19,"title":{},"body":{"classes/AlertTable1719546873577.html":{},"classes/AlertTable1719546931988.html":{},"injectables/AppService.html":{},"entities/City.html":{},"interfaces/Data.html":{},"classes/Filter.html":{},"guards/LoginGuard.html":{},"classes/LoginUserDto.html":{},"classes/MyLogger.html":{},"entities/Permission.html":{},"guards/PermissionGuard.html":{},"entities/Person.html":{},"modules/RedisModule.html":{},"interfaces/RedisModuleOption.html":{},"classes/RegisterUserDto.html":{},"interfaces/Request.html":{},"injectables/ResponseInterceptor.html":{},"entities/Role.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":219,"title":{},"body":{"classes/Filter.html":{}}}],["typeorm",{"_index":36,"title":{},"body":{"classes/AlertTable1719546873577.html":{},"classes/AlertTable1719546931988.html":{},"entities/City.html":{},"entities/Permission.html":{},"entities/Person.html":{},"entities/Role.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":524,"title":{},"body":{"modules/UserModule.html":{}}}],["typeormmodule.forroot(ormconfig",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["typeorm目前支持mysql",{"_index":704,"title":{},"body":{"miscellaneous/variables.html":{}}}],["types",{"_index":620,"title":{},"body":{"dependencies.html":{}}}],["types/cors",{"_index":624,"title":{},"body":{"dependencies.html":{}}}],["types/http",{"_index":626,"title":{},"body":{"dependencies.html":{}}}],["types/multer",{"_index":629,"title":{},"body":{"dependencies.html":{}}}],["types/uuid",{"_index":631,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedexception",{"_index":242,"title":{},"body":{"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{}}}],["unauthorizedexception('token",{"_index":274,"title":{},"body":{"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["undefined",{"_index":258,"title":{},"body":{"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{},"controllers/UserController.html":{}}}],["unknown",{"_index":137,"title":{},"body":{"injectables/AppService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["up",{"_index":18,"title":{},"body":{"classes/AlertTable1719546873577.html":{},"classes/AlertTable1719546931988.html":{}}}],["up(queryrunner",{"_index":33,"title":{},"body":{"classes/AlertTable1719546873577.html":{},"classes/AlertTable1719546931988.html":{}}}],["update",{"_index":64,"title":{},"body":{"classes/AlertTable1719546873577.html":{},"classes/AlertTable1719546931988.html":{}}}],["updatedate",{"_index":385,"title":{},"body":{"entities/Person.html":{}}}],["updatedatecolumn",{"_index":170,"title":{},"body":{"entities/City.html":{},"entities/Permission.html":{},"entities/Person.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["updatedatecolumn({comment",{"_index":163,"title":{},"body":{"entities/City.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["updatetime",{"_index":152,"title":{},"body":{"entities/City.html":{},"entities/Permission.html":{},"entities/Role.html":{},"entities/User.html":{}}}],["url",{"_index":495,"title":{},"body":{"controllers/UserController.html":{}}}],["useclass",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["usefactory",{"_index":404,"title":{},"body":{"modules/RedisModule.html":{},"interfaces/RedisModuleOption.html":{}}}],["user",{"_index":41,"title":{"entities/User.html":{}},"body":{"classes/AlertTable1719546873577.html":{},"classes/AlertTable1719546931988.html":{},"entities/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.controller",{"_index":522,"title":{},"body":{"modules/UserModule.html":{}}}],["user.dto",{"_index":472,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.dto.ts",{"_index":277,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:10",{"_index":422,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:13",{"_index":281,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["user.dto.ts:15",{"_index":413,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["user.dto.ts:8",{"_index":284,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["user.password",{"_index":553,"title":{},"body":{"injectables/UserService.html":{}}}],["user.service",{"_index":358,"title":{},"body":{"guards/PermissionGuard.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user/login.guard",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["user/permission.guard",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["user/user.module",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["user1",{"_index":567,"title":{},"body":{"injectables/UserService.html":{}}}],["user1.password",{"_index":570,"title":{},"body":{"injectables/UserService.html":{}}}],["user1.roles",{"_index":587,"title":{},"body":{"injectables/UserService.html":{}}}],["user1.username",{"_index":568,"title":{},"body":{"injectables/UserService.html":{}}}],["user2",{"_index":571,"title":{},"body":{"injectables/UserService.html":{}}}],["user2.password",{"_index":574,"title":{},"body":{"injectables/UserService.html":{}}}],["user2.roles",{"_index":588,"title":{},"body":{"injectables/UserService.html":{}}}],["user2.username",{"_index":572,"title":{},"body":{"injectables/UserService.html":{}}}],["user\\`(\\`id",{"_index":61,"title":{},"body":{"classes/AlertTable1719546873577.html":{},"classes/AlertTable1719546931988.html":{}}}],["user_role_relation",{"_index":49,"title":{},"body":{"classes/AlertTable1719546873577.html":{},"classes/AlertTable1719546931988.html":{},"entities/User.html":{}}}],["user_roles_role",{"_index":449,"title":{},"body":{"entities/User.html":{}}}],["usercontroller",{"_index":451,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userid",{"_index":55,"title":{},"body":{"classes/AlertTable1719546873577.html":{},"classes/AlertTable1719546931988.html":{},"guards/LoginGuard.html":{},"guards/PermissionGuard.html":{},"interfaces/Request.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["usermodule",{"_index":100,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":153,"title":{},"body":{"entities/City.html":{},"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["username'})@isstring({message",{"_index":282,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["username类型校验失败'})@isnotempty({message",{"_index":283,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["username类型校验失败'})@length(6",{"_index":414,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["username长度在6",{"_index":415,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["userrepository",{"_index":526,"title":{},"body":{"injectables/UserService.html":{}}}],["userservice",{"_index":356,"title":{"injectables/UserService.html":{}},"body":{"guards/PermissionGuard.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["utils/responseutil",{"_index":474,"title":{},"body":{"controllers/UserController.html":{}}}],["uuid",{"_index":655,"title":{},"body":{"dependencies.html":{}}}],["validationpipe",{"_index":224,"title":{},"body":{"classes/Filter.html":{},"controllers/UserController.html":{}}}],["validator",{"_index":244,"title":{},"body":{"guards/LoginGuard.html":{},"classes/LoginUserDto.html":{},"guards/PermissionGuard.html":{},"classes/RegisterUserDto.html":{},"interfaces/Request.html":{}}}],["value",{"_index":23,"title":{},"body":{"classes/AlertTable1719546873577.html":{},"classes/AlertTable1719546931988.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["varchar(36",{"_index":65,"title":{},"body":{"classes/AlertTable1719546873577.html":{},"classes/AlertTable1719546931988.html":{}}}],["variable",{"_index":601,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":698,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verify返回会校验入参，错误就抛出了error",{"_index":267,"title":{},"body":{"guards/LoginGuard.html":{},"interfaces/Request.html":{}}}],["version",{"_index":695,"title":{},"body":{"properties.html":{}}}],["void",{"_index":199,"title":{},"body":{"classes/Filter.html":{}}}],["warn",{"_index":294,"title":{},"body":{"classes/MyLogger.html":{}}}],["warn(message",{"_index":302,"title":{},"body":{"classes/MyLogger.html":{}}}],["winston",{"_index":307,"title":{},"body":{"classes/MyLogger.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["yyyy",{"_index":333,"title":{},"body":{"classes/MyLogger.html":{}}}],["z0",{"_index":418,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["za",{"_index":417,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["zoom",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AlertTable1719546873577.html":{"url":"classes/AlertTable1719546873577.html","title":"class - AlertTable1719546873577","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AlertTable1719546873577\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            migrations/1719546873577-alert-table.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AlertTable1719546873577'\n                    \n                \n                    \n                        \n                                Defined in migrations/1719546873577-alert-table.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in migrations/1719546873577-alert-table.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in migrations/1719546873577-alert-table.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from \"typeorm\";\n\nexport class AlertTable1719546873577 implements MigrationInterface {\n    name = 'AlertTable1719546873577'\n\n    public async up(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(`ALTER TABLE \\`user\\` ADD \\`id\\` int NOT NULL PRIMARY KEY COMMENT '用户id'`);\n        await queryRunner.query(`ALTER TABLE \\`user_role_relation\\` DROP PRIMARY KEY`);\n        await queryRunner.query(`ALTER TABLE \\`user_role_relation\\` ADD PRIMARY KEY (\\`roleId\\`)`);\n        await queryRunner.query(`DROP INDEX \\`IDX_387a09a362c32ee04b33fc4eaa\\` ON \\`user_role_relation\\``);\n        await queryRunner.query(`ALTER TABLE \\`user_role_relation\\` DROP COLUMN \\`userId\\``);\n        await queryRunner.query(`ALTER TABLE \\`user_role_relation\\` ADD \\`userId\\` int NOT NULL`);\n        await queryRunner.query(`ALTER TABLE \\`user_role_relation\\` DROP PRIMARY KEY`);\n        await queryRunner.query(`ALTER TABLE \\`user_role_relation\\` ADD PRIMARY KEY (\\`roleId\\`, \\`userId\\`)`);\n        await queryRunner.query(`CREATE INDEX \\`IDX_387a09a362c32ee04b33fc4eaa\\` ON \\`user_role_relation\\` (\\`userId\\`)`);\n        await queryRunner.query(`ALTER TABLE \\`user_role_relation\\` ADD CONSTRAINT \\`FK_387a09a362c32ee04b33fc4eaab\\` FOREIGN KEY (\\`userId\\`) REFERENCES \\`user\\`(\\`id\\`) ON DELETE CASCADE ON UPDATE CASCADE`);\n    }\n\n    public async down(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(`ALTER TABLE \\`user_role_relation\\` DROP FOREIGN KEY \\`FK_387a09a362c32ee04b33fc4eaab\\``);\n        await queryRunner.query(`DROP INDEX \\`IDX_387a09a362c32ee04b33fc4eaa\\` ON \\`user_role_relation\\``);\n        await queryRunner.query(`ALTER TABLE \\`user_role_relation\\` DROP PRIMARY KEY`);\n        await queryRunner.query(`ALTER TABLE \\`user_role_relation\\` ADD PRIMARY KEY (\\`roleId\\`)`);\n        await queryRunner.query(`ALTER TABLE \\`user_role_relation\\` DROP COLUMN \\`userId\\``);\n        await queryRunner.query(`ALTER TABLE \\`user_role_relation\\` ADD \\`userId\\` varchar(36) NOT NULL`);\n        await queryRunner.query(`CREATE INDEX \\`IDX_387a09a362c32ee04b33fc4eaa\\` ON \\`user_role_relation\\` (\\`userId\\`)`);\n        await queryRunner.query(`ALTER TABLE \\`user_role_relation\\` DROP PRIMARY KEY`);\n        await queryRunner.query(`ALTER TABLE \\`user_role_relation\\` ADD PRIMARY KEY (\\`userId\\`, \\`roleId\\`)`);\n        await queryRunner.query(`ALTER TABLE \\`user\\` DROP COLUMN \\`id\\``);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AlertTable1719546931988.html":{"url":"classes/AlertTable1719546931988.html","title":"class - AlertTable1719546931988","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AlertTable1719546931988\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            migrations/1719546931988-alert-table.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AlertTable1719546931988'\n                    \n                \n                    \n                        \n                                Defined in migrations/1719546931988-alert-table.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                        \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in migrations/1719546931988-alert-table.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                        \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n                    \n                        \n                            Defined in migrations/1719546931988-alert-table.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryRunner\n                                            \n                                                        QueryRunner\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from \"typeorm\";\n\nexport class AlertTable1719546931988 implements MigrationInterface {\n    name = 'AlertTable1719546931988'\n\n    public async up(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(`ALTER TABLE \\`user\\` ADD \\`id\\` int NOT NULL PRIMARY KEY AUTO_INCREMENT COMMENT '用户id'`);\n        await queryRunner.query(`ALTER TABLE \\`user_role_relation\\` DROP PRIMARY KEY`);\n        await queryRunner.query(`ALTER TABLE \\`user_role_relation\\` ADD PRIMARY KEY (\\`roleId\\`)`);\n        await queryRunner.query(`DROP INDEX \\`IDX_387a09a362c32ee04b33fc4eaa\\` ON \\`user_role_relation\\``);\n        await queryRunner.query(`ALTER TABLE \\`user_role_relation\\` DROP COLUMN \\`userId\\``);\n        await queryRunner.query(`ALTER TABLE \\`user_role_relation\\` ADD \\`userId\\` int NOT NULL`);\n        await queryRunner.query(`ALTER TABLE \\`user_role_relation\\` DROP PRIMARY KEY`);\n        await queryRunner.query(`ALTER TABLE \\`user_role_relation\\` ADD PRIMARY KEY (\\`roleId\\`, \\`userId\\`)`);\n        await queryRunner.query(`CREATE INDEX \\`IDX_387a09a362c32ee04b33fc4eaa\\` ON \\`user_role_relation\\` (\\`userId\\`)`);\n        await queryRunner.query(`ALTER TABLE \\`user_role_relation\\` ADD CONSTRAINT \\`FK_387a09a362c32ee04b33fc4eaab\\` FOREIGN KEY (\\`userId\\`) REFERENCES \\`user\\`(\\`id\\`) ON DELETE CASCADE ON UPDATE CASCADE`);\n    }\n\n    public async down(queryRunner: QueryRunner): Promise {\n        await queryRunner.query(`ALTER TABLE \\`user_role_relation\\` DROP FOREIGN KEY \\`FK_387a09a362c32ee04b33fc4eaab\\``);\n        await queryRunner.query(`DROP INDEX \\`IDX_387a09a362c32ee04b33fc4eaa\\` ON \\`user_role_relation\\``);\n        await queryRunner.query(`ALTER TABLE \\`user_role_relation\\` DROP PRIMARY KEY`);\n        await queryRunner.query(`ALTER TABLE \\`user_role_relation\\` ADD PRIMARY KEY (\\`roleId\\`)`);\n        await queryRunner.query(`ALTER TABLE \\`user_role_relation\\` DROP COLUMN \\`userId\\``);\n        await queryRunner.query(`ALTER TABLE \\`user_role_relation\\` ADD \\`userId\\` varchar(36) NOT NULL`);\n        await queryRunner.query(`CREATE INDEX \\`IDX_387a09a362c32ee04b33fc4eaa\\` ON \\`user_role_relation\\` (\\`userId\\`)`);\n        await queryRunner.query(`ALTER TABLE \\`user_role_relation\\` DROP PRIMARY KEY`);\n        await queryRunner.query(`ALTER TABLE \\`user_role_relation\\` ADD PRIMARY KEY (\\`userId\\`, \\`roleId\\`)`);\n        await queryRunner.query(`ALTER TABLE \\`user\\` DROP COLUMN \\`id\\``);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(public readonly appService: AppService) {}\n\n  @Get()\n  async getHello(): Promise {\n    const res = await this.appService.getHello();\n    return res;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nRedisModule\n\nRedisModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nRedisModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RedisModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ormConfig } from './common/configs/db.config';\nimport { UserModule } from './user/user.module';\nimport { JwtModule } from '@nestjs/jwt';\nimport { RedisModule } from './common/modules/redis.module';\nimport { redisConfig } from './common/configs/redis.config';\nimport { LoginGuard } from './user/login.guard';\nimport { PermissionGuard } from './user/permission.guard';\n\n@Module({\n  imports: [\n    UserModule,\n    TypeOrmModule.forRoot(ormConfig),\n    RedisModule.forRoot({\n      global: true,\n      redisConfig,\n    }),\n    JwtModule.register({\n      global: true, // 设置为全局模块，使用无需import，全局都可以注入\n      secret: 'hedaodao', // 秘钥\n    }),\n  ],\n  controllers: [AppController],\n  providers: [\n    AppService,\n    {\n      provide: 'APP_GUARD',\n      useClass: LoginGuard,\n    },\n    {\n      provide: 'APP_GUARD',\n      useClass: PermissionGuard,\n    },\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Private\n                                    Readonly\n                                redis\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:9\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     unknown\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                            Readonly\n                        redis\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Redis\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject('REDIS')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport Redis from 'ioredis';\n\n@Injectable()\nexport class AppService {\n  @Inject('REDIS')\n  private readonly redis: Redis;\n\n  async getHello() {\n    const res = await this.redis.sadd('he', 'daodao');\n    console.log(res);\n    return 'hello';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/City.html":{"url":"entities/City.html","title":"entity - City","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  City\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entities/city.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createTime\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                updateTime\n                            \n                            \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({comment: '创建时间'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/city.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/city.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({length: 50, comment: '密码'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/city.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updateTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({comment: '更新时间'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/city.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({length: 50, comment: '用户名'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/city.entity.ts:25\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  Entity,\n  PrimaryGeneratedColumn,\n  Tree,\n  TreeChildren,\n  TreeParent,\n  UpdateDateColumn,\n} from 'typeorm';\n\n@Entity({\n  name: 'city',\n})\n@Tree('closure-table')\nexport class City {\n  // 主键自增列\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({\n    length: 50,\n    comment: '用户名',\n  })\n  username: string;\n\n  @Column({\n    length: 50,\n    comment: '密码',\n  })\n  password: string;\n\n  @CreateDateColumn({\n    comment: '创建时间',\n  })\n  createTime: Date;\n\n  @UpdateDateColumn({\n    comment: '更新时间',\n  })\n  updateTime: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Data.html":{"url":"interfaces/Data.html","title":"interface - Data","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Data\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptors/response.interceptor.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n} from '@nestjs/common';\nimport { map, Observable } from 'rxjs';\n\ninterface Data {\n  data: T;\n}\n\n@Injectable()\nexport class ResponseInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable> {\n    return next.handle().pipe(\n      map((data) => {\n        return data;\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Filter.html":{"url":"classes/Filter.html","title":"class - Filter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Filter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/filters/exception.filter.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: Error, host: ArgumentsHost)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/filters/exception.filter.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                exception\n                                            \n                                                        Error\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                host\n                                            \n                                                        ArgumentsHost\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ArgumentsHost,\n  Catch,\n  ExceptionFilter,\n  HttpException,\n  HttpStatus,\n} from '@nestjs/common';\nimport { Response } from 'express';\n\n@Catch()\nexport class Filter implements ExceptionFilter {\n  catch(exception: Error, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    // const request = ctx.getRequest();\n    const response = ctx.getResponse();\n\n    // 如果Error对象不小心漏到这里，是没有getStatus方法的，默认返回服务器内部错误\n    let status = HttpStatus.INTERNAL_SERVER_ERROR;\n    let msg = '服务器内部错误';\n    console.log(exception);\n\n    // 确定抛出的是HttpException\n    if (exception instanceof HttpException) {\n      status = exception.getStatus();\n      const exceptionRes = exception.getResponse() as\n        | string\n        | { message: string[] | string };\n\n      if (typeof exceptionRes === 'object') {\n        if (typeof exceptionRes.message === 'string') {\n          // throw抛出具体的HttpException子类，例如NotFoundException、BadRequestException\n          msg = exceptionRes.message;\n        }\n        if (Array.isArray(exceptionRes.message)) {\n          // ValidationPipe 校验参数错误，抛出的是BadRequestException，exception.message是Bad Request Exception。\n          // 不能显示具体哪些字段错误了，但是有个response.message是个数组其中是ValidationPipe验证错误的提示。\n          msg = exceptionRes.message[0];\n        }\n      } else {\n        // throw抛出的HttpException\n        msg = exceptionRes;\n      }\n    }\n\n    response.status(status).json({\n      code: -1,\n      data: null,\n      msg,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/LoginGuard.html":{"url":"guards/LoginGuard.html","title":"guard - LoginGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    LoginGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/user/login.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                jwtService\n                            \n                            \n                                    \n                                    Private\n                                    Readonly\n                                reflector\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/login.guard.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     boolean | Promise | Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Inject,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { Request } from 'express';\nimport { Observable } from 'rxjs';\nimport { JwtService } from '@nestjs/jwt';\nimport { isDefined } from 'class-validator';\nimport { Reflector } from '@nestjs/core';\n\ndeclare module 'express' {\n  interface Request {\n    userId: number;\n  }\n}\n\n@Injectable()\nexport class LoginGuard implements CanActivate {\n  @Inject(JwtService)\n  jwtService: JwtService;\n\n  @Inject(Reflector)\n  private readonly reflector: Reflector;\n\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    const host = context.switchToHttp();\n    const request: Request = host.getRequest();\n\n    // getAllAndOverride 表示出现重复的元数据，后面的覆盖前面的\n    const requireLogin = this.reflector.getAllAndOverride('require-login', [\n      context.getClass(), // 获取class的元数据\n      context.getHandler(), // 获取handler的元数据\n    ]) as boolean | undefined;\n\n    console.log('requireLogin', requireLogin);\n\n    // 未设置登陆校验，放行\n    if (!requireLogin) {\n      return true;\n    }\n\n    const authorization = request.header('authorization'); // 取header字段，如果没有就是undefined\n\n    if (!isDefined(authorization)) {\n      throw new UnauthorizedException('用户未登录');\n    }\n\n    try {\n      // verify返回会校验入参，错误就抛出了Error\n      // token正确则返回的{...payload,iat:签发时间戳,exp:过期时间戳}\n      const jwtData = this.jwtService.verify(authorization);\n      // 挂到请求上，controller中可以使用\n      request.userId = jwtData.userId;\n    } catch (err) {\n      throw new UnauthorizedException('token失效，请重新登录');\n    }\n\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginUserDto.html":{"url":"classes/LoginUserDto.html","title":"class - LoginUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/login-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({name: 'password'})@IsString({message: 'password类型校验失败'})@IsNotEmpty({message: 'password不能为空'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/login-user.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({name: 'username'})@IsString({message: 'username类型校验失败'})@IsNotEmpty({message: 'username不能为空'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/login-user.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class LoginUserDto {\n  @ApiProperty({ name: 'username' })\n  @IsString({ message: 'username类型校验失败' })\n  @IsNotEmpty({ message: 'username不能为空' })\n  username: string;\n\n  @ApiProperty({ name: 'password' })\n  @IsString({ message: 'password类型校验失败' })\n  @IsNotEmpty({ message: 'password不能为空' })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MyLogger.html":{"url":"classes/MyLogger.html","title":"class - MyLogger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MyLogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/logger/MyLogger.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        LoggerService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                log\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/common/logger/MyLogger.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                    \n                        \n                                Defined in src/common/logger/MyLogger.ts:8\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(message: any, ...optionalParams: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/logger/MyLogger.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                optionalParams\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(message: any, ...optionalParams: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/logger/MyLogger.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                optionalParams\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(message: any, ...optionalParams: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/logger/MyLogger.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                optionalParams\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { LoggerService } from '@nestjs/common';\nimport { createLogger, format, Logger, transports } from 'winston';\nimport * as chalk from 'chalk';\nimport * as dayjs from 'dayjs';\nimport 'winston-daily-rotate-file';\n\nexport class MyLogger implements LoggerService {\n  private logger: Logger;\n\n  constructor() {\n    this.logger = createLogger({\n      level: 'debug',\n      transports: [\n        new transports.Console({\n          format: format.combine(\n            format.colorize(),\n            format.printf((param) => {\n              const { context, level, message, time } = param;\n              // console.log(param);\n              const appStr = chalk.green('[Nest]');\n              const contextStr = chalk.yellow(`[${context}]`);\n              return `${appStr} ${time} ${level} ${contextStr} ${message}`;\n            }),\n          ),\n        }),\n        new transports.DailyRotateFile({\n          level: 'info',\n          format: format.combine(format.timestamp(), format.json()),\n          dirname: 'log',\n          filename: '%DATE%.log',\n          datePattern: 'YYYY-MM-DD HH:mm',\n          maxSize: '10k',\n        }),\n      ],\n    });\n  }\n\n  log(message: any, ...optionalParams: any[]): any {\n    const time = dayjs(Date.now()).format('YYYY-MM-DD HH:mm:ss');\n    this.logger.log('info', `${message}`, { context: optionalParams[0], time });\n  }\n  warn(message: any, ...optionalParams: any[]): any {\n    const time = dayjs(Date.now()).format('YYYY-MM-DD HH:mm:ss');\n    this.logger.log('warn', `${message}`, { context: optionalParams[0], time });\n  }\n  error(message: any, ...optionalParams: any[]): any {\n    const time = dayjs(Date.now()).format('YYYY-MM-DD HH:mm:ss');\n    this.logger.log('error', `${message}`, {\n      context: optionalParams[0],\n      time,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Permission.html":{"url":"entities/Permission.html","title":"entity - Permission","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Permission\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/permission.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createTime\n                            \n                            \n                                    \n                                desc\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                updateTime\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({comment: '创建时间'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/permission.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        desc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({comment: '权限描述', default: '暂无'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/permission.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({comment: '权限id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/permission.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({comment: '权限名'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/permission.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updateTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({comment: '更新时间'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/permission.entity.ts:28\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  Entity,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\n\n@Entity()\nexport class Permission {\n  @PrimaryGeneratedColumn({ comment: '权限id' })\n  id: number;\n\n  @Column({ comment: '权限名' })\n  name: string;\n\n  @Column({ comment: '权限描述', default: '暂无' })\n  desc: string;\n\n  @CreateDateColumn({\n    comment: '创建时间',\n  })\n  createTime: Date;\n\n  @UpdateDateColumn({\n    comment: '更新时间',\n  })\n  updateTime: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/PermissionGuard.html":{"url":"guards/PermissionGuard.html","title":"guard - PermissionGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    PermissionGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/user/permission.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Private\n                                    Readonly\n                                reflector\n                            \n                            \n                                    \n                                    Private\n                                    Readonly\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(context: ExecutionContext)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/permission.guard.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ExecutionContext,\n  Inject,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { Request } from 'express';\nimport { Reflector } from '@nestjs/core';\nimport { isDefined } from 'class-validator';\nimport { UserService } from './user.service';\n\n@Injectable()\nexport class PermissionGuard implements CanActivate {\n  @Inject(Reflector)\n  private readonly reflector: Reflector;\n\n  @Inject(UserService)\n  private readonly userService: UserService;\n\n  async canActivate(context: ExecutionContext): Promise {\n    const host = context.switchToHttp();\n\n    const request: Request = host.getRequest();\n\n    const requirePermission = this.reflector.getAllAndOverride(\n      'require-permission',\n      [context.getClass(), context.getHandler()],\n    ) as string[] | undefined;\n\n    console.log('requirePermission', requirePermission);\n\n    // 未设置权限，直接放行\n    if (!requirePermission) {\n      return true;\n    }\n\n    // 设置权限\n    // 获取当其用户权限\n    if (!isDefined(request.userId)) {\n      // 登录守卫会设置用户信息\n      throw new UnauthorizedException(\n        '设置权限需用户登陆，handler需增加@RequireLogin()',\n      );\n    }\n\n    const userId = request.userId;\n    const roles = (await this.userService.findRolesByUserId(userId))?.roles;\n\n    if (roles.length === 0) {\n      throw new UnauthorizedException('该用户暂未分配角色');\n    }\n\n    const rolesJoinPermissions =\n      await this.userService.findPermissionsByRoleIds(\n        roles.map((item) => item.id),\n      );\n\n    const permissionNameSet = new Set();\n    rolesJoinPermissions.forEach((item) => {\n      item.permissions.forEach((permission) => {\n        permissionNameSet.add(permission.name);\n      });\n    });\n\n    return requirePermission.every((requirePermissionName) => {\n      return permissionNameSet.has(requirePermissionName);\n    });\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Person.html":{"url":"entities/Person.html","title":"entity - Person","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Person\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entities/person.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                age\n                            \n                            \n                                    \n                                createDate\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                updateDate\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        age\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/person.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/person.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/person.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({length: 50})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/person.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updateDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entities/person.entity.ts:29\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  Entity,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\n\n@Entity({\n  name: 'person',\n})\nexport class Person {\n  // 主键自增列\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({\n    length: 50,\n  })\n  name: string;\n\n  @Column()\n  age: number;\n\n  @CreateDateColumn()\n  createDate: Date;\n\n  @UpdateDateColumn()\n  updateDate: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RedisModule.html":{"url":"modules/RedisModule.html","title":"module - RedisModule","body":"\n                   \n\n\n\n\n    Modules\n    RedisModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/common/modules/redis.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(options: RedisModuleOption)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/modules/redis.module.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                            RedisModuleOption\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     DynamicModule\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Module, Provider } from '@nestjs/common';\nimport Redis from 'ioredis';\nimport { RedisOptions } from 'ioredis/built/redis/RedisOptions';\n\ninterface RedisModuleOption {\n  global: boolean;\n  redisConfig: RedisOptions;\n}\n\n@Module({})\nexport class RedisModule {\n  static forRoot(options: RedisModuleOption): DynamicModule {\n    const redis = new Redis(options.redisConfig);\n    const redisProvider: Provider = {\n      provide: 'REDIS',\n      useFactory() {\n        return redis;\n      },\n    };\n\n    return {\n      module: RedisModule,\n      global: options.global,\n      providers: [redisProvider],\n      exports: [redisProvider],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RedisModuleOption.html":{"url":"interfaces/RedisModuleOption.html","title":"interface - RedisModuleOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RedisModuleOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/modules/redis.module.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            global\n                                        \n                                \n                                \n                                        \n                                            redisConfig\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        global\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        global:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        redisConfig\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        redisConfig:     RedisOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RedisOptions\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DynamicModule, Module, Provider } from '@nestjs/common';\nimport Redis from 'ioredis';\nimport { RedisOptions } from 'ioredis/built/redis/RedisOptions';\n\ninterface RedisModuleOption {\n  global: boolean;\n  redisConfig: RedisOptions;\n}\n\n@Module({})\nexport class RedisModule {\n  static forRoot(options: RedisModuleOption): DynamicModule {\n    const redis = new Redis(options.redisConfig);\n    const redisProvider: Provider = {\n      provide: 'REDIS',\n      useFactory() {\n        return redis;\n      },\n    };\n\n    return {\n      module: RedisModule,\n      global: options.global,\n      providers: [redisProvider],\n      exports: [redisProvider],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterUserDto.html":{"url":"classes/RegisterUserDto.html","title":"class - RegisterUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/dto/register-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({message: 'password类型校验失败'})@Length(6, 30, {message: 'password长度在6-30之间'})@IsNotEmpty({message: 'password不能为空'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/register-user.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString({message: 'username类型校验失败'})@Length(6, 30, {message: 'username长度在6-30之间'})@Matches(/^[a-zA-Z0-9#$%_-]+$/, {message: '用户名只能是字母、数字或者 #、$、%、_、- 这些字符'})@IsNotEmpty({message: 'username不能为空'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/dto/register-user.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString, Length, Matches } from 'class-validator';\n\nexport class RegisterUserDto {\n  @IsString({ message: 'username类型校验失败' })\n  @Length(6, 30, { message: 'username长度在6-30之间' })\n  @Matches(/^[a-zA-Z0-9#$%_-]+$/, {\n    message: '用户名只能是字母、数字或者 #、$、%、_、- 这些字符',\n  })\n  @IsNotEmpty({ message: 'username不能为空' })\n  username: string;\n\n  @IsString({ message: 'password类型校验失败' })\n  @Length(6, 30, { message: 'password长度在6-30之间' })\n  @IsNotEmpty({ message: 'password不能为空' })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Request.html":{"url":"interfaces/Request.html","title":"interface - Request","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Request\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/login.guard.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  CanActivate,\n  ExecutionContext,\n  Inject,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { Request } from 'express';\nimport { Observable } from 'rxjs';\nimport { JwtService } from '@nestjs/jwt';\nimport { isDefined } from 'class-validator';\nimport { Reflector } from '@nestjs/core';\n\ndeclare module 'express' {\n  interface Request {\n    userId: number;\n  }\n}\n\n@Injectable()\nexport class LoginGuard implements CanActivate {\n  @Inject(JwtService)\n  jwtService: JwtService;\n\n  @Inject(Reflector)\n  private readonly reflector: Reflector;\n\n  canActivate(\n    context: ExecutionContext,\n  ): boolean | Promise | Observable {\n    const host = context.switchToHttp();\n    const request: Request = host.getRequest();\n\n    // getAllAndOverride 表示出现重复的元数据，后面的覆盖前面的\n    const requireLogin = this.reflector.getAllAndOverride('require-login', [\n      context.getClass(), // 获取class的元数据\n      context.getHandler(), // 获取handler的元数据\n    ]) as boolean | undefined;\n\n    console.log('requireLogin', requireLogin);\n\n    // 未设置登陆校验，放行\n    if (!requireLogin) {\n      return true;\n    }\n\n    const authorization = request.header('authorization'); // 取header字段，如果没有就是undefined\n\n    if (!isDefined(authorization)) {\n      throw new UnauthorizedException('用户未登录');\n    }\n\n    try {\n      // verify返回会校验入参，错误就抛出了Error\n      // token正确则返回的{...payload,iat:签发时间戳,exp:过期时间戳}\n      const jwtData = this.jwtService.verify(authorization);\n      // 挂到请求上，controller中可以使用\n      request.userId = jwtData.userId;\n    } catch (err) {\n      throw new UnauthorizedException('token失效，请重新登录');\n    }\n\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResponseInterceptor.html":{"url":"injectables/ResponseInterceptor.html","title":"injectable - ResponseInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ResponseInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptors/response.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in src/common/interceptors/response.interceptor.ts:15\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        ExecutionContext\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        CallHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n} from '@nestjs/common';\nimport { map, Observable } from 'rxjs';\n\ninterface Data {\n  data: T;\n}\n\n@Injectable()\nexport class ResponseInterceptor implements NestInterceptor {\n  intercept(context: ExecutionContext, next: CallHandler): Observable> {\n    return next.handle().pipe(\n      map((data) => {\n        return data;\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Role.html":{"url":"entities/Role.html","title":"entity - Role","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/role.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createTime\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                permissions\n                            \n                            \n                                    \n                                updateTime\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({comment: '创建时间'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/role.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({comment: '角色id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/role.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({comment: '角色名'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/role.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        permissions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Permission[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined)@JoinTable({name: 'role_permission_relation'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/role.entity.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updateTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({comment: '更新时间'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/role.entity.ts:30\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  Entity,\n  JoinTable,\n  ManyToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { Permission } from './permission.entity';\n\n@Entity()\nexport class Role {\n  @PrimaryGeneratedColumn({\n    comment: '角色id',\n  })\n  id: number;\n\n  @Column({ comment: '角色名' })\n  name: string;\n\n  @CreateDateColumn({\n    comment: '创建时间',\n  })\n  createTime: Date;\n\n  @UpdateDateColumn({\n    comment: '更新时间',\n  })\n  updateTime: Date;\n\n  @ManyToMany(() => Permission)\n  @JoinTable({ name: 'role_permission_relation' })\n  permissions: Permission[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/entities/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                createTime\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                password\n                            \n                            \n                                    \n                                    \n                                roles\n                            \n                            \n                                    \n                                updateTime\n                            \n                            \n                                    \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        createTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({comment: '创建时间'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn({comment: '用户id'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({length: 50, comment: '密码'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined)@JoinTable({name: 'user_role_relation'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        updateTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({comment: '更新时间'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({length: 50, comment: '用户名'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/entities/user.entity.ts:21\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  Column,\n  CreateDateColumn,\n  Entity,\n  JoinTable,\n  ManyToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { Role } from './role.entity';\n\n@Entity()\nexport class User {\n  @PrimaryGeneratedColumn({ comment: '用户id' })\n  id: number;\n\n  @Column({\n    length: 50,\n    comment: '用户名',\n  })\n  username: string;\n\n  @Column({\n    length: 50,\n    comment: '密码',\n  })\n  password: string;\n\n  @CreateDateColumn({\n    comment: '创建时间',\n  })\n  createTime: Date;\n\n  @UpdateDateColumn({\n    comment: '更新时间',\n  })\n  updateTime: Date;\n\n  @ManyToMany(() => Role)\n  @JoinTable({ name: 'user_role_relation' }) // 默认生成的中间表名：user_roles_role,即 表名A_关联字段_表名B。name字段可以指定表名\n  roles: Role[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                handlerAAA\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Async\n                                login\n                            \n                            \n                                    \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        handlerAAA\n                        \n                    \n                \n            \n            \n                \n                        \n                    handlerAAA()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @RequireLogin()@RequirePermission('add')@Get('aaa')\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(loginUserDto: LoginUserDto, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: '登录接口', description: '用于用户登录'})@ApiBody({type: LoginUserDto})@ApiResponse({status: undefined, description: '成功返回示例', type: String})@ApiResponse({status: undefined, description: 'id 不合法'})@Post('login')\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loginUserDto\n                                            \n                                                            LoginUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                res\n                                            \n                                                        Response\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(registerUserDto: RegisterUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('register')\n                \n            \n\n                    \n                        \n                            Defined in src/user/user.controller.ts:106\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                registerUserDto\n                                            \n                                                            RegisterUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  HttpStatus,\n  Inject,\n  Post,\n  Res,\n  ValidationPipe,\n} from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { RegisterUserDto } from './dto/register-user.dto';\nimport { responseSuccess } from '../utils/responseUtil';\nimport { LoginUserDto } from './dto/login-user.dto';\nimport { JwtService } from '@nestjs/jwt';\nimport { Response } from 'express';\nimport { InjectEntityManager } from '@nestjs/typeorm';\nimport { EntityManager } from 'typeorm';\nimport { RequireLogin } from '../common/decorator/require-login.decorator';\nimport { RequirePermission } from '../common/decorator/require-permission.decorator';\nimport { ApiBody, ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\n\n@ApiTags('user')\n@Controller('user')\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  @Inject(JwtService)\n  private readonly jwtService: JwtService;\n\n  @InjectEntityManager()\n  private readonly entityManager: EntityManager;\n\n  // @Get('init')\n  // async initUserPermissionData() {\n  //   await this.userService.initData();\n  //   return responseSuccess(null);\n  // }\n\n  @RequireLogin()\n  @RequirePermission('add')\n  @Get('aaa')\n  handlerAAA() {\n    return responseSuccess(null);\n  }\n\n  // 接口概述\n  @ApiOperation({\n    summary: '登录接口',\n    description: '用于用户登录',\n  })\n  @ApiBody({\n    type: LoginUserDto,\n  })\n\n  // 描述url参数\n  // @ApiQuery({\n  //   name: 'username',\n  //   type: String,\n  //   description: '用户名',\n  //   required: true,\n  //   example: 'hedaodao',\n  // })\n\n  // 描述路径参数\n  // @ApiParam()\n\n  // 添加返回值用例\n  @ApiResponse({\n    status: HttpStatus.OK,\n    description: '成功返回示例',\n    type: String,\n  })\n  @ApiResponse({\n    status: HttpStatus.UNAUTHORIZED,\n    description: 'id 不合法',\n  })\n  @Post('login')\n  async login(\n    @Body(ValidationPipe) loginUserDto: LoginUserDto,\n    @Res({ passthrough: true }) res: Response,\n  ) {\n    const foundUser = await this.userService.login(loginUserDto);\n    const accessToken = await this.jwtService.signAsync(\n      {\n        userId: foundUser.id,\n        username: foundUser.username,\n      },\n      { expiresIn: '30m' },\n    );\n    const refreshToken = await this.jwtService.signAsync(\n      {\n        userId: foundUser.id,\n        username: foundUser.username,\n      },\n      { expiresIn: '7d' },\n    );\n\n    res.setHeader('access_token', accessToken);\n    res.setHeader('refresh_token', refreshToken);\n\n    return responseSuccess(null);\n  }\n\n  @Post('register')\n  async register(@Body(ValidationPipe) registerUserDto: RegisterUserDto) {\n    await this.userService.register(registerUserDto);\n    return responseSuccess(null, '注册成功');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService \n\nUserService \n\n\n\nUserModule\n\nUserModule\n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { UserController } from './user.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from './entities/user.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([User])],\n  controllers: [UserController],\n  providers: [UserService],\n  exports: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                entityManager\n                            \n                            \n                                    Private\n                                logger\n                            \n                            \n                                    \n                                    Private\n                                    Readonly\n                                userRepository\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findPermissionsByRoleIds\n                            \n                            \n                                    Async\n                                findRolesByUserId\n                            \n                            \n                                    Async\n                                initData\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findPermissionsByRoleIds\n                        \n                    \n                \n            \n            \n                \n                        \n                    findPermissionsByRoleIds(rolesId: number[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                rolesId\n                                            \n                                                        number[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findRolesByUserId\n                        \n                    \n                \n            \n            \n                \n                        \n                    findRolesByUserId(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        initData\n                        \n                    \n                \n            \n            \n                \n                        \n                    initData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:87\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(loginUserDto: LoginUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                loginUserDto\n                                            \n                                                            LoginUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(registerUserDto: RegisterUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/user/user.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                registerUserDto\n                                            \n                                                            RegisterUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        entityManager\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EntityManager\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @InjectEntityManager()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger()\n                    \n                \n                    \n                        \n                                Defined in src/user/user.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Private\n                            Readonly\n                        userRepository\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Repository\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @InjectRepository(User)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/user/user.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { User } from './entities/user.entity';\nimport { InjectEntityManager, InjectRepository } from '@nestjs/typeorm';\nimport { EntityManager, In, Repository } from 'typeorm';\nimport { RegisterUserDto } from './dto/register-user.dto';\nimport { Logger } from 'winston';\nimport { LoginUserDto } from './dto/login-user.dto';\nimport * as md5 from 'md5';\nimport { Role } from './entities/role.entity';\nimport { Permission } from './entities/permission.entity';\n\n@Injectable()\nexport class UserService {\n  private logger = new Logger();\n\n  @InjectRepository(User)\n  private readonly userRepository: Repository;\n\n  @InjectEntityManager()\n  entityManager: EntityManager;\n\n  async login(loginUserDto: LoginUserDto) {\n    const user = await this.userRepository.findOne({\n      where: {\n        username: loginUserDto.username,\n      },\n      relations: {\n        roles: true,\n      },\n    });\n\n    console.log(user);\n    if (!user) {\n      throw new HttpException('用户不存在', HttpStatus.FORBIDDEN);\n    }\n\n    if (md5(loginUserDto.password) !== user.password) {\n      throw new HttpException('用户密码错误', HttpStatus.FORBIDDEN);\n    }\n\n    return user;\n  }\n\n  async register(registerUserDto: RegisterUserDto) {\n    const findUser = await this.userRepository.findOneBy({\n      username: registerUserDto.username,\n    });\n\n    if (findUser) {\n      throw new HttpException('用户已存在', 200);\n    }\n\n    const newUser = new User();\n    newUser.username = registerUserDto.username;\n    newUser.password = md5(registerUserDto.password);\n\n    try {\n      await this.userRepository.save(newUser);\n    } catch (err) {\n      return new Error(err);\n    }\n  }\n\n  // 根据userId查询用户、角色信息\n  async findRolesByUserId(id: number) {\n    return this.entityManager.findOne(User, {\n      where: {\n        id,\n      },\n      relations: {\n        roles: true,\n      },\n    });\n  }\n  // 根据角色查询\n  async findPermissionsByRoleIds(rolesId: number[]) {\n    return this.entityManager.find(Role, {\n      where: {\n        id: In(rolesId),\n      },\n      relations: {\n        permissions: true,\n      },\n    });\n  }\n\n  async initData() {\n    const user1 = new User();\n    user1.username = 'jack';\n    user1.password = 'jack';\n\n    const user2 = new User();\n    user2.username = 'tom';\n    user2.password = 'tom';\n\n    const role1 = new Role();\n    role1.name = '管理员';\n    const role2 = new Role();\n    role2.name = '普通用户';\n\n    const permission1 = new Permission();\n    permission1.name = 'add';\n    permission1.desc = '新增权限';\n    const permission2 = new Permission();\n    permission2.name = 'delete';\n    permission2.desc = '删除权限';\n\n    role1.permissions = [permission1];\n    role2.permissions = [permission2];\n\n    user1.roles = [role1];\n    user2.roles = [role2];\n\n    // 这里注意必须保证这个顺序。例如：只有权限入库了，保存角色时，才能让权限id、角色id保存到中间表中\n    await this.entityManager.save(Permission, [permission1, permission2]);\n    await this.entityManager.save(Role, [role1, role2]);\n    await this.entityManager.save(User, [user1, user2]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                migrations/1719546873577-alert-table.ts\n            \n            class\n            AlertTable1719546873577\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                migrations/1719546931988-alert-table.ts\n            \n            class\n            AlertTable1719546931988\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/configs/db.config.ts\n            \n            variable\n            baseConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/configs/db.config.ts\n            \n            variable\n            ormConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/configs/db.config.ts\n            \n            variable\n            ormConfigForCLI\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/configs/redis.config.ts\n            \n            variable\n            redisConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/decorator/require-login.decorator.ts\n            \n            variable\n            RequireLogin\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/decorator/require-permission.decorator.ts\n            \n            variable\n            RequirePermission\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/filters/exception.filter.ts\n            \n            class\n            Filter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/interceptors/response.interceptor.ts\n            \n            injectable\n            ResponseInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/interceptors/response.interceptor.ts\n            \n            interface\n            Data\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/logger/MyLogger.ts\n            \n            class\n            MyLogger\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/common/modules/redis.module.ts\n            \n            interface\n            RedisModuleOption\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/entities/city.entity.ts\n            \n            entity\n            City\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/entities/city.entity.ts\n            \n            class\n            City\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/entities/person.entity.ts\n            \n            entity\n            Person\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/dto/login-user.dto.ts\n            \n            class\n            LoginUserDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/dto/register-user.dto.ts\n            \n            class\n            RegisterUserDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/user/entities/permission.entity.ts\n            \n            entity\n            Permission\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/entities/role.entity.ts\n            \n            entity\n            Role\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/entities/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/user/login.guard.ts\n            \n            interface\n            Request\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/user/login.guard.ts\n            \n            guard\n            LoginGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/permission.guard.ts\n            \n            guard\n            PermissionGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/utils/responseUtil.ts\n            \n            function\n            responseError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/responseUtil.ts\n            \n            function\n            responseSuccess\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/jwt : ^10.2.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/swagger : ^7.4.0\n        \n            @nestjs/typeorm : ^10.0.2\n        \n            @types/cors : ^2.8.17\n        \n            @types/http-proxy : ^1.17.14\n        \n            @types/multer : ^1.4.11\n        \n            @types/uuid : ^9.0.8\n        \n            chalk : 4\n        \n            compressing : ^1.10.1\n        \n            cors : ^2.8.5\n        \n            dayjs : ^1.11.11\n        \n            http-proxy : ^1.18.1\n        \n            http-proxy-middleware : ^3.0.0\n        \n            i : ^0.3.7\n        \n            ioredis : ^5.4.1\n        \n            md5 : ^2.3.0\n        \n            mysql2 : ^3.10.1\n        \n            npm : ^10.8.1\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n        \n            typeorm : ^0.3.20\n        \n            uuid : ^9.0.1\n        \n            winston : ^3.13.0\n        \n            winston-daily-rotate-file : ^5.0.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            responseError   (src/.../responseUtil.ts)\n                        \n                        \n                            responseSuccess   (src/.../responseUtil.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/utils/responseUtil.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        responseError\n                        \n                    \n                \n            \n            \n                \nresponseError(err: Error, code: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                err\n                                            \n                                                        Error\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                code\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    -1\n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        responseSuccess\n                        \n                    \n                \n            \n            \n                \nresponseSuccess(data: any, msg: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                msg\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'ok'\n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n\n安装依赖\nExample :$ pnpm install运行App\nExample :# 本地开发模式\n$ pnpm start:dev\n\n# 生产模式\n$ pnpm start:prod项目结构依赖\nExample :$ pnpm compodoc数据库迁移\nExample :# 生成迁移文件\n$ migration:generate\n\n# 执行迁移文件\n$ migration:run\n\n# 撤回迁移\n$ migration:revert测试\nExample :# 单元测试\n$ pnpm run test\n\n# e2e测试\n$ pnpm run test:e2e\n\n# 覆盖率\n$ pnpm run test:covLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RedisModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nRedisModule\n\nRedisModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nRedisModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    5 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    7 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.0.0\n        \n            Author : hedaodao\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            baseConfig   (src/.../db.config.ts)\n                        \n                        \n                            ormConfig   (src/.../db.config.ts)\n                        \n                        \n                            ormConfigForCLI   (src/.../db.config.ts)\n                        \n                        \n                            redisConfig   (src/.../redis.config.ts)\n                        \n                        \n                            RequireLogin   (src/.../require-login.decorator.ts)\n                        \n                        \n                            RequirePermission   (src/.../require-permission.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/configs/db.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        baseConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataSourceOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  type: 'mysql', // 数据库类型，TypeORM目前支持mysql、 postgres、oracle、sqllite等\n  host: 'localhost',\n  port: 3306,\n  username: 'root',\n  password: 'hedaodao',\n  database: 'nest_practice', // 数据库名（也叫schema）。这里指定的数据库需要存在，否则会报错\n  synchronize: true, // 是否自动同步entities内的实体到数据库\n  logging: true, // 打印生成的sql语句\n  entities: [User, Role, Permission], // 支持glob ['./**/entities/*.ts']、实体Class。注意配置为glob，synchronize失效，无法自动同步\n  subscribers: [],\n  poolSize: 10, // 连接池中连接的最大数量\n  connectorPackage: 'mysql2', // 指定用什么驱动包。这里用的是mysql2，所以需要安装 npm install --save mysql2\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ormConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : baseConfig\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ormConfigForCLI\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new DataSource({\n  ...baseConfig,\n  // synchronize:true自动将表结构的变动同步到数据库，这十分不安全的。migrations会生成sql文件，我们手动修改数据库\n  // 注意这个只在script脚本migration:run、migration:revert中使用。如果放在baseConfig中，orm读取这个文件会报错\n  migrations: ['./src/migrations/*.ts'],\n})\n                    \n                \n\n\n        \n    \n\n    src/common/configs/redis.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        redisConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RedisOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  host: '127.0.0.1',\n  port: 6379,\n}\n                    \n                \n\n\n        \n    \n\n    src/common/decorator/require-login.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RequireLogin\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata('require-login', true)\n                    \n                \n\n\n        \n    \n\n    src/common/decorator/require-permission.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        RequirePermission\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...permissions: string[]) =>\n  SetMetadata('require-permission', permissions)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
